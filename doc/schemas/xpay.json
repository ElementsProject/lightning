{
  "$schema": "../rpc-schema-draft.json",
  "type": "object",
  "additionalProperties": false,
  "rpc": "xpay",
  "title": "Command for sending a payment for an invoice",
  "description": [
    "The **xpay** RPC command attempts to find routes to the given destination, and send the funds it asks for.",
    "",
    "This plugin is simpler and more sophisticated than the older 'pay' plugin, but does not have all the same features."
  ],
  "request": {
    "required": [
      "invstring"
    ],
    "properties": {
      "invstring": {
        "type": "string",
        "description": [
          "bolt11 or bolt12 invoice, a bolt12 (non-recursive) offer or a BIP353 name.  If it's a bip353 name, an offer is fetched with `fetchbip353` if available.  If it's an offer, the invoice is fetched using `fetchinvoice` automatically."
        ]
      },
      "amount_msat": {
        "type": "msat",
        "description": [
          "Only possible for a bolt11 invoice which does not have an amount (in which case, it's compulsory).  *amount_msat* is in millisatoshi precision; it can be a whole number, or a whole number with suffix *msat* or *sat*, or a three decimal point number with suffix *sat*, or an 1 to 11 decimal point number suffixed by *btc*."
        ]
      },
      "maxfee": {
        "type": "msat",
        "description": [
          "*maxfee* creates an absolute limit on what fee we will pay."
        ],
        "default": "5000msat, or 1% (whatever is greater)"
      },
      "layers": {
        "type": "array",
        "description": [
          "These are askrene layers to apply in addition to xpay's own: these can alter the topology or provide additional information on the lightning network.  See askrene-create-layer."
        ],
        "items": {
          "type": "string",
          "description": [
            "name of an existing layer"
          ]
        }
      },
      "retry_for": {
        "type": "u32",
        "description": [
          "Until *retry_for* seconds passes, the command will keep finding routes and retrying the payment."
        ],
        "default": "60 seconds"
      },
      "partial_msat": {
        "type": "msat",
        "description": [
          "Explicitly state that you are only paying some part of the invoice.  Presumably someone else is paying the rest (otherwise the payment will time out at the recipient)."
        ]
      },
      "maxdelay": {
        "type": "u32",
        "added": "v25.02",
        "description": [
          "A payment may be delayed for up to `maxdelay` blocks by another node; clients should be prepared for this worst case."
        ],
        "default": "2016"
      }
    }
  },
  "response": {
    "required": [
      "payment_preimage",
      "failed_parts",
      "successful_parts",
      "amount_msat",
      "amount_sent_msat"
    ],
    "properties": {
      "payment_preimage": {
        "type": "secret",
        "description": [
          "The proof of payment: SHA256 of this **payment_hash**."
        ]
      },
      "failed_parts": {
        "type": "u64",
        "description": [
          "How many separate payment parts failed."
        ]
      },
      "successful_parts": {
        "type": "u64",
        "description": [
          "How many separate payment parts succeeded (or are anticipated to succeed).  This will be at least one."
        ]
      },
      "amount_msat": {
        "type": "msat",
        "description": [
          "Amount the recipient received."
        ]
      },
      "amount_sent_msat": {
        "type": "msat",
        "description": [
          "Total amount we sent (including fees)."
        ]
      }
    }
  },
  "errors": [
    "The following error codes may occur:",
    "",
    "- -1: Catchall nonspecific error.",
    "- 203: Permanent failure from destination (e.g. it said it didn't recognize invoice)",
    "- 205: Couldn't find, or find a way to, the destination.",
    "- 207: Invoice has expired.",
    "- 219: Invoice has already been paid.",
    "- 209: Other payment error."
  ],
  "author": [
    "Rusty Russell <<rusty@rustcorp.com.au>> is mainly responsible."
  ],
  "see_also": [
    "lightning-pay(7)",
    "lightning-decodepay(7)"
  ],
  "resources": [
    "Main web site: <https://github.com/ElementsProject/lightning>"
  ],
  "examples": [
    {
      "request": {
        "id": "example:xpay#1",
        "method": "xpay",
        "params": [
          "lnbcrt100n1pne035qsp572t5efk76vr3rdkt5zu2qcduqapdj40mhrs7pgpthufgw3tvtwrqpp5rw6387e0hhjqty3y8pmanaqyhgmxsf679m4vm8rjvne57pxn0lgsdp9w3jhxazl0pcxz72lwd5k6urvv5sxymmvwscnzxqyjw5qcqp9rzjqdwjkyvjm7apxnssu4qgwhfkd67ghs6n6k48v6uqczgt88p6tky96qqqwgqqqqgqqqqqqqqpqqqqqzsqqc9qxpqysgqh986ypquaysut7ed57nr8pum0x6u5hg3lnsf6j840l0cn6e28zcyqk76xpxkxjzlkhj8cx7zapyct6zdz2ff7nt3lym376k8ff0u9egq2wf5mk"
        ]
      },
      "response": {
        "payment_preimage": "a23af6838ba877f6a23af6838ba877f6a23af6838ba877f6a23af6838ba877f6",
        "amount_msat": 10000,
        "amount_sent_msat": 10002,
        "failed_parts": 0,
        "successful_parts": 1
      }
    },
    {
      "request": {
        "id": "example:xpay#2",
        "method": "xpay",
        "params": {
          "invstring": "lni1qqgvq8khp6uam2t8cq0dwr4emk5kwq3qqc3xu3s3rg94nj40zfsy866mhu5vxne6tcej5878k2mneuvgjy83pmsz953rvg9rtxj8lalh43z8epwydjfrmffn3y3p5qz5cywpu09rr4vsyc4ltgrq50wep0hruykzdz8kjmlaymfx3gn3c0gcrcwn08fary4aqgplwhkgurkjc3rj42v0ntzhw0gr9dl4vwt2l3meh378fzjx5cc7mhgqxdva9ffx3l879amqjdk7np3nyfq6wjtp4weyzhdgq447vakcu0sh4dh0gxszhvffjfqcy8h77mjzguszhtfqy9glqvpm0sp32vgtlw2rh8mwuzedxn3z4d44zq7g8pkz6906ysj9qqe9eqccms4thz8tgy4vu7fdnqt0yaeky4a4pkdprcykm7vj4sz2pqeuguj820h2d6vwh0j7cdypzeg7ffnpvggzvmj9nrga83q474e2sjygxzmq7ln5fmvjxh4skxafx2pmx9wqx5v9qgqxyfhyvyg6pdvu4tcjvpp7kkal9rp57wj7xv4pl3ajku70rzy3pafqyqlg2sq9sggz3x54wmukps9ppjdvu9axg8l62dkkv5975l6zlt37ts4szjaem7c6pxqzvmj9nrga83q474e2sjygxzmq7ln5fmvjxh4skxafx2pmx9wqx5vqyhckl6y7ulcampu0ezz5qqx4cs3fwt6kyrfjc08dju8hc3lr30d7qyp5e6kp2jd30yr8husmmcfzxe797vler28r4hv6ehyy29lljue6ljqqxtxjzt8sw08wk4vx2j6wwv94myujhvzg09mx9xnh9fmvewnm0ex4mkal4sfm00gep0srey7pz6vt3cd82k3pcqqqqqqqqqqqqqqq2qqqqqqqqqqqqqwjfvkl43fqqqqqqzjqgeuhc6q2sg855evhcsdr4cfclsfxncamps5whxf2ynj7kqrutejl8xcm38k4vx4qyqlg4cpsyqqqkqssyehytxx360zptatj4pygsv9kpal8gnkeyd0tpvd6jv5rkv2uqdgc7pqzjd09ca3y6jytvgzva9jcyxavkyzvjujh4g4dz6qv5gjp95ld7sxy4yrpuc937lvmvrwm6qycexdzsmmtlzyskmzqm5e8uevw6d4nxc"
        }
      },
      "response": {
        "payment_preimage": "c01ed70eb9ddb51ec01ed70eb9ddb51ec01ed70eb9ddb51ec01ed70eb9ddb51e",
        "amount_msat": 1000,
        "amount_sent_msat": 1000,
        "failed_parts": 0,
        "successful_parts": 1
      }
    }
  ]
}
