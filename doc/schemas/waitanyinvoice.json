{
  "$schema": "../rpc-schema-draft.json",
  "type": "object",
  "rpc": "waitanyinvoice",
  "title": "Command for waiting for payments",
  "description": [
    "The **waitanyinvoice** RPC command waits until an invoice is paid, then returns a single entry as per **listinvoices**. It will not return for any invoices paid prior to or including the *lastpay_index*.",
    "",
    "This is usually called iteratively: once with no arguments, then repeatedly with the returned *pay_index* entry. This ensures that no paid invoice is missed. The *pay_index* is a monotonically-increasing number assigned to an invoice when it gets paid. The first valid *pay_index* is 1."
  ],
  "request": {
    "required": [],
    "additionalProperties": false,
    "properties": {
      "lastpay_index": {
        "type": "u64",
        "description": [
          "Ignores any invoices paid prior to or including this index. 0 is equivalent to not specifying and negative value is invalid."
        ]
      },
      "timeout": {
        "type": "u64",
        "description": [
          "If specified, wait at most that number of seconds, which must be an integer. If the specified *timeout* is reached, this command will return with an error. You can specify this to 0 so that **waitanyinvoice** will return immediately with an error if no pending invoice is available yet. If unspecified, this command will wait indefinitely."
        ]
      }
    }
  },
  "response": {
    "required": [
      "label",
      "payment_hash",
      "status",
      "created_index",
      "expires_at"
    ],
    "additionalProperties": true,
    "properties": {
      "label": {
        "type": "string",
        "description": [
          "Unique label supplied at invoice creation."
        ]
      },
      "description": {
        "type": "string",
        "description": [
          "Description used in the invoice."
        ]
      },
      "payment_hash": {
        "type": "hash",
        "description": [
          "The hash of the *payment_preimage* which will prove payment."
        ]
      },
      "status": {
        "type": "string",
        "enum": [
          "paid",
          "expired"
        ],
        "description": [
          "Whether it's paid or expired."
        ]
      },
      "expires_at": {
        "type": "u64",
        "description": [
          "UNIX timestamp of when it will become / became unpayable."
        ]
      },
      "amount_msat": {
        "type": "msat",
        "description": [
          "The amount required to pay this invoice."
        ]
      },
      "bolt11": {
        "type": "string",
        "description": [
          "The BOLT11 string (always present unless *bolt12* is)."
        ]
      },
      "bolt12": {
        "type": "string",
        "description": [
          "The BOLT12 string (always present unless *bolt11* is)."
        ]
      },
      "created_index": {
        "type": "u64",
        "added": "v23.08",
        "description": [
          "1-based index indicating order this invoice was created in."
        ]
      },
      "updated_index": {
        "type": "u64",
        "added": "v23.08",
        "description": [
          "1-based index indicating order this invoice was changed (only present if it has changed since creation)."
        ]
      }
    },
    "allOf": [
      {
        "if": {
          "additionalProperties": true,
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "paid"
              ]
            }
          }
        },
        "then": {
          "additionalProperties": false,
          "required": [
            "pay_index",
            "amount_received_msat",
            "paid_at",
            "payment_preimage"
          ],
          "properties": {
            "label": {},
            "description": {},
            "payment_hash": {},
            "status": {},
            "msatoshi": {},
            "amount_msat": {},
            "bolt11": {},
            "bolt12": {},
            "expires_at": {},
            "created_index": {},
            "updated_index": {},
            "pay_index": {
              "type": "u64",
              "description": [
                "Unique incrementing index for this payment."
              ]
            },
            "amount_received_msat": {
              "type": "msat",
              "description": [
                "The amount actually received (could be slightly greater than *amount_msat*, since clients may overpay)."
              ]
            },
            "paid_at": {
              "type": "u64",
              "description": [
                "UNIX timestamp of when it was paid."
              ]
            },
            "paid_outpoint": {
              "type": "object",
              "description": [
                "Outpoint this invoice was paid with."
              ],
              "added": "v23.11",
              "additionalProperties": false,
              "required": [
                "txid",
                "outnum"
              ],
              "properties": {
                "txid": {
                  "added": "v23.11",
                  "type": "txid",
                  "description": [
                    "ID of the transaction that paid the invoice."
                  ]
                },
                "outnum": {
                  "added": "v23.11",
                  "type": "u32",
                  "description": [
                    "The 0-based output number of the transaction that paid the invoice."
                  ]
                }
              }
            },
            "payment_preimage": {
              "type": "secret",
              "description": [
                "Proof of payment."
              ]
            }
          }
        },
        "else": {
          "additionalProperties": false,
          "properties": {
            "label": {},
            "description": {},
            "payment_hash": {},
            "status": {},
            "msatoshi": {},
            "amount_msat": {},
            "bolt11": {},
            "bolt12": {},
            "created_index": {},
            "updated_index": {},
            "expires_at": {}
          }
        }
      }
    ]
  },
  "errors": [
    "The following error codes may occur:",
    "",
    "- 904: The *timeout* was reached without an invoice being paid."
  ],
  "author": [
    "Rusty Russell <<rusty@rustcorp.com.au>> is mainly responsible."
  ],
  "see_also": [
    "lightning-waitinvoice(7)",
    "lightning-listinvoices(7)",
    "lightning-delinvoice(7)",
    "lightning-invoice(7)"
  ],
  "resources": [
    "Main web site: <https://github.com/ElementsProject/lightning>"
  ],
  "examples": [
    {
      "request": {
        "id": "example:waitanyinvoice#1",
        "method": "waitanyinvoice",
        "params": {}
      },
      "response": {
        "label": "lbl balance l1 to l2",
        "bolt11": "lnbcrt5m1pne035qsp5y09we8jhy4ug66c945kzkqyqzrhhqsap22q07wnawlgntwa5ca2spp5xsktk894vn50xt4kfl5vy49t7hk976u85rudu7gfetuwvk8nh54qdpcv3jhxcmjd9c8g6t0dcs8xetwvss8xmmdv5s8xct5wvsxcvfqw3hjqmpjxqyjw5qcqp9rzjqdwjkyvjm7apxnssu4qgwhfkd67ghs6n6k48v6uqczgt88p6tky96qqqwqqqqqgqqqqqqqqpqqqqqzsqqc9qxpqysgqvsru69ylhpkda6980sl996q2fmld2zszepv79zf747la6zzt8mf8p0qw80w6j8d5evc72fls4d99sza23nnm6pahjqrs8kv3apdttjcq2mm2xw",
        "payment_hash": "342cbb1cb564e8f32eb64fe8c254abf5ec5f6b87a0f8de7909caf8e658f3bd2a",
        "amount_msat": 500000000,
        "status": "paid",
        "pay_index": 1,
        "amount_received_msat": 500000000,
        "paid_at": 1738000000,
        "payment_preimage": "08377744ca985c1808377744ca985c1808377744ca985c1808377744ca985c18",
        "description": "description send some sats l1 to l2",
        "expires_at": 1738604800,
        "created_index": 1,
        "updated_index": 1
      }
    },
    {
      "request": {
        "id": "example:waitanyinvoice#2",
        "method": "waitanyinvoice",
        "params": {
          "lastpay_index": 1,
          "timeout": 0
        }
      },
      "response": {
        "label": "test_injectpaymentonion1",
        "bolt11": "lnbcrt10n1pne035qsp5qwyv8rs63ramlntxnjyqfyl3usj9fcvw2wcekvssera3c674p2aspp5layccvcq3q020g7qgxf7g0cjx3zvv3rxyqypprpry2w6x5gmahgsdp6w3jhxapqd9hx5etrw3cxz7tdv4h8gmmwd9hkuvfqv3jhxcmjd9c8g6t0dcxqyjw5qcqp99qxpqysgqanlwwp0fnysrz8wgx44kdupzfv4l9x0l8daxa9zyqcwwx4de5rv4s3udrmgc6w03dtn0h3kcvwhv602fpryz06wrnk9k5d5z6qtx4mqqyhqgf2",
        "payment_hash": "ff498c3300881ea7a3c04193e43f123444c644662008108c23229da3511bedd1",
        "amount_msat": 1000,
        "status": "paid",
        "pay_index": 2,
        "amount_received_msat": 1000,
        "paid_at": 1738000000,
        "payment_preimage": "08377744ca985c1e08377744ca985c1e08377744ca985c1e08377744ca985c1e",
        "description": "test injectpaymentonion1 description",
        "expires_at": 1738604800,
        "created_index": 8,
        "updated_index": 2
      }
    }
  ]
}
