{
  "$schema": "../rpc-schema-draft.json",
  "type": "object",
  "added": "v22.11",
  "rpc": "invoicerequest",
  "title": "Command for offering payments",
  "description": [
    "The **invoicerequest** RPC command creates an `invoice_request` to send payments: it automatically enables the processing of an incoming invoice, and payment of it. The reader of the resulting `invoice_request` can use lightning-sendinvoice(7) to collect their payment."
  ],
  "request": {
    "required": [
      "amount",
      "description"
    ],
    "additionalProperties": false,
    "properties": {
      "amount": {
        "type": "msat",
        "description": [
          "A positive value in millisatoshi precision; it can be a whole number, or a whole number ending in *msat* or *sat*, or a number with three decimal places ending in *sat*, or a number with 1 to 11 decimal places ending in *btc*."
        ]
      },
      "description": {
        "type": "string",
        "description": [
          "A short description of purpose of the payment, e.g. *ATM withdrawl*. This value is encoded into the resulting `invoice_request` and is viewable by anyone you expose it to. It must be UTF-8, and cannot use *\\u* JSON escape codes."
        ]
      },
      "issuer": {
        "type": "string",
        "description": [
          "Who is issuing it (i.e. you) if appropriate."
        ]
      },
      "label": {
        "type": "string",
        "description": [
          "An internal-use name for the offer, which can be any UTF-8 string."
        ]
      },
      "absolute_expiry": {
        "type": "u64",
        "description": [
          "The time the offer is valid until, in seconds since the first day of 1970 UTC. If not set, the `invoice_request` remains valid (though it can be deactivated by the issuer of course). This is encoded in the `invoice_request`."
        ]
      },
      "single_use": {
        "type": "boolean",
        "description": [
          "Indicates that the `invoice_request` is only valid once; we may attempt multiple payments, but as soon as one is successful no more invoices are accepted (i.e. only one person can take the money)."
        ],
        "default": "True"
      }
    }
  },
  "response": {
    "required": [
      "invreq_id",
      "single_use",
      "active",
      "bolt12",
      "used"
    ],
    "additionalProperties": false,
    "properties": {
      "invreq_id": {
        "type": "hash",
        "description": [
          "The SHA256 hash of all invoice_request fields less than 160."
        ]
      },
      "active": {
        "type": "boolean",
        "enum": [
          true
        ],
        "description": [
          "Whether the invoice_request is currently active."
        ]
      },
      "single_use": {
        "type": "boolean",
        "description": [
          "Whether the invoice_request will become inactive after we pay an invoice for it."
        ]
      },
      "bolt12": {
        "type": "string",
        "description": [
          "The bolt12 string starting with lnr."
        ]
      },
      "used": {
        "type": "boolean",
        "enum": [
          false
        ],
        "description": [
          "Whether the invoice_request has already been used."
        ]
      },
      "label": {
        "type": "string",
        "description": [
          "The label provided when creating the invoice_request."
        ]
      }
    }
  },
  "errors": [
    "On failure, an error is returned and no `invoice_request` is created. If the lightning process fails before responding, the caller should use lightning-listinvoicerequests(7) to query whether it was created or not.",
    "",
    "- -1: Catchall nonspecific error."
  ],
  "author": [
    "Rusty Russell <<rusty@rustcorp.com.au>> is mainly responsible."
  ],
  "see_also": [
    "lightning-listinvoicerequests(7)",
    "lightning-disableinvoicerequest(7)"
  ],
  "resources": [
    "Main web site: <https://github.com/ElementsProject/lightning>"
  ],
  "examples": [
    {
      "request": {
        "id": "example:invoicerequest#1",
        "method": "invoicerequest",
        "params": {
          "amount": 1000000,
          "description": "Simple test"
        }
      },
      "response": {
        "invreq_id": "22c3d45d0a9640a827ed1fefb9a07c947e38fa4c086f1f16d94882848e264868",
        "active": true,
        "single_use": true,
        "bolt12": "lnr1qqg99gqg2990zl3322sqs52279lrzzst2d5k6urvv5s8getnw3gzqp3zderpzxstt8927ynqg044h0egcd8n5h3n9g0u0v4h8ncc3yg02gps7sjqtqssytfzxcs2xkdy0lml0tzy0jzugmyj8kjn8zfzrgq9fsgurc72x82e7pqfylfzzhcux84v2552lt7p2ekunuamtsdgyk34a86m4zklkdjjdzt757t4sp0m8cp9tdj6hfe67mcuwl3q7zr4sr4z4gn2fvksykkn5g",
        "used": false
      }
    },
    {
      "request": {
        "id": "example:invoicerequest#2",
        "method": "invoicerequest",
        "params": {
          "amount": "10000sat",
          "description": "Requesting for invoice",
          "issuer": "clightning store"
        }
      },
      "response": {
        "invreq_id": "c5b8ebc06bdc246d7b852ce5637be459d3c053a5b3f8f68854f97af7371c9a50",
        "active": true,
        "single_use": true,
        "bolt12": "lnr1qqg99gqg2990zl3j22sqs52279lryzsk2fjhzat9wd6xjmn8ypnx7u3qd9h8vmmfvdj3yyrrd35kw6r5de5kueeqwd6x7un92qsqvgnwgcg35z6ee2h3yczraddm72xrfua9uve2rlrm9deu7xyfzr6jqwvfdqzcyypz6g3kyz34nfrl7lm6c3rushzxey3a55ecjgs6qp2vz8q78j336k0sgr76j2yl0lrljzljjdz8ztcpryunwgfk4hzz3sle3mhaw8v2gc4dn9map7v6dlpya98jy2mcrwe27qcsywlfqp6dhh30l54sj0e8tqsk",
        "used": false
      }
    }
  ]
}
