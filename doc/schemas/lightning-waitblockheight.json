{
  "$schema": "../rpc-schema-draft.json",
  "type": "object",
  "additionalProperties": false,
  "rpc": "waitblockheight",
  "title": "Command for waiting for blocks on the blockchain",
  "description": [
    "The **waitblockheight** RPC command waits until the blockchain has reached the specified *blockheight*."
  ],
  "request": {
    "required": [
      "blockheight"
    ],
    "properties": {
      "blockheight": {
        "type": "u32",
        "description": [
          "Current blockheight of the blockchain if the value is greater than this number. If it is a present or past block height, then the command returns immediately."
        ]
      },
      "timeout": {
        "type": "u32",
        "description": [
          "Only wait up to specified seconds."
        ],
        "default": "60 seconds"
      }
    }
  },
  "response": {
    "required": [
      "blockheight"
    ],
    "properties": {
      "blockheight": {
        "type": "u32",
        "description": [
          "The current block height (>= *blockheight* parameter)."
        ]
      }
    },
    "post_return_value_notes": [
      "If *timeout* seconds is reached without the specified blockheight being reached, this command will fail with a code of `2000`."
    ]
  },
  "errors": [
    "The following error codes may occur:",
    "",
    "- 2000: Timed out."
  ],
  "json_example": [
    {
      "request": {
        "id": "example:waitblockheight#1",
        "method": "waitblockheight",
        "params": {
          "blockheight": 99,
          "timeout": null
        }
      },
      "response": {
        "blockheight": 99
      }
    },
    {
      "request": {
        "id": "example:waitblockheight#2",
        "method": "waitblockheight",
        "params": {
          "blockheight": 103,
          "timeout": 600
        }
      },
      "response": {
        "blockheight": 103
      }
    }
  ],
  "author": [
    "ZmnSCPxj <<ZmnSCPxj@protonmail.com>> is mainly responsible."
  ],
  "resources": [
    "Main web site: <https://github.com/ElementsProject/lightning>"
  ]
}
