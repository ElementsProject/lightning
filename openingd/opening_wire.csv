#include <bitcoin/chainparams.h>
#include <common/cryptomsg.h>
#include <common/channel_config.h>
#include <common/channel_id.h>
#include <common/derive_basepoints.h>
#include <common/features.h>
#include <common/per_peer_state.h>

msgtype,opening_init,6000
# Which network are we configured for?
msgdata,opening_init,chainparams,chainparams,
msgdata,opening_init,our_features,feature_set,
# Base configuration we'll offer (channel reserve will vary with amount)
msgdata,opening_init,our_config,channel_config,
# Minimum/maximum configuration values we'll accept
msgdata,opening_init,max_to_self_delay,u32,
msgdata,opening_init,min_effective_htlc_capacity_msat,amount_msat,
msgdata,opening_init,pps,per_peer_state,
msgdata,opening_init,our_basepoints,basepoints,
msgdata,opening_init,our_funding_pubkey,pubkey,
# Constraints in case the other end tries to open a channel.
msgdata,opening_init,minimum_depth,u32,
msgdata,opening_init,min_feerate,u32,
msgdata,opening_init,max_feerate,u32,
msgdata,opening_init,lfeatures_len,u16,
msgdata,opening_init,lfeatures,u8,lfeatures_len
msgdata,opening_init,option_static_remotekey,bool,
# Optional msg to send.
msgdata,opening_init,len,u16,
msgdata,opening_init,msg,u8,len
msgdata,opening_init,dev_temporary_channel_id,?byte,32
msgdata,opening_init,dev_fast_gossip,bool,

# Openingd->master: they offered channel, should we continue?
msgtype,opening_got_offer,6005
msgdata,opening_got_offer,funding_satoshis,amount_sat,
msgdata,opening_got_offer,push_msat,amount_msat,
msgdata,opening_got_offer,dust_limit_satoshis,amount_sat,
msgdata,opening_got_offer,max_htlc_value_in_flight_msat,amount_msat,
msgdata,opening_got_offer,channel_reserve_satoshis,amount_sat,
msgdata,opening_got_offer,htlc_minimum_msat,amount_msat,
msgdata,opening_got_offer,feerate_per_kw,u32,
msgdata,opening_got_offer,to_self_delay,u16,
msgdata,opening_got_offer,max_accepted_htlcs,u16,
msgdata,opening_got_offer,channel_flags,u8,
msgdata,opening_got_offer,shutdown_len,u16,
msgdata,opening_got_offer,shutdown_scriptpubkey,u8,shutdown_len
# master->openingd: optional rejection message
msgtype,opening_got_offer_reply,6105
msgdata,opening_got_offer_reply,rejection,?wirestring,
msgdata,opening_got_offer_reply,shutdown_len,u16,
msgdata,opening_got_offer_reply,our_shutdown_scriptpubkey,?u8,shutdown_len

#include <common/penalty_base.h>
# Openingd->master: we've successfully offered channel.
# This gives their sig, means we can broadcast tx: we're done.
msgtype,opening_funder_reply,6101
msgdata,opening_funder_reply,their_config,channel_config,
msgdata,opening_funder_reply,first_commit,bitcoin_tx,
msgdata,opening_funder_reply,pbase,?penalty_base,
msgdata,opening_funder_reply,first_commit_sig,bitcoin_signature,
msgdata,opening_funder_reply,pps,per_peer_state,
msgdata,opening_funder_reply,revocation_basepoint,pubkey,
msgdata,opening_funder_reply,payment_basepoint,pubkey,
msgdata,opening_funder_reply,htlc_basepoint,pubkey,
msgdata,opening_funder_reply,delayed_payment_basepoint,pubkey,
msgdata,opening_funder_reply,their_per_commit_point,pubkey,
msgdata,opening_funder_reply,minimum_depth,u32,
msgdata,opening_funder_reply,remote_fundingkey,pubkey,
msgdata,opening_funder_reply,funding_txid,bitcoin_txid,
msgdata,opening_funder_reply,funding_txout,u16,
msgdata,opening_funder_reply,feerate_per_kw,u32,
msgdata,opening_funder_reply,our_channel_reserve_satoshis,amount_sat,
msgdata,opening_funder_reply,shutdown_len,u16,
msgdata,opening_funder_reply,shutdown_scriptpubkey,u8,shutdown_len

# master->openingd: start channel establishment for a funding tx
msgtype,opening_funder_start,6002
msgdata,opening_funder_start,funding_satoshis,amount_sat,
msgdata,opening_funder_start,push_msat,amount_msat,
msgdata,opening_funder_start,len_upfront,u16,
msgdata,opening_funder_start,upfront_shutdown_script,u8,len_upfront
msgdata,opening_funder_start,feerate_per_kw,u32,
msgdata,opening_funder_start,channel_flags,u8,

# openingd->master: send back output script for 2-of-2 funding output
msgtype,opening_funder_start_reply,6102
msgdata,opening_funder_start_reply,script_len,u8,
msgdata,opening_funder_start_reply,scriptpubkey,u8,script_len
msgdata,opening_funder_start_reply,upfront_shutdown_negotiated,bool,

# master->openingd: complete channel establishment for a funding
# tx that will be paid for by an external wallet
# response to this is a normal `opening_funder_reply` ??
msgtype,opening_funder_complete,6012
msgdata,opening_funder_complete,funding_txid,bitcoin_txid,
msgdata,opening_funder_complete,funding_txout,u16,

#master->openingd: cancel channel establishment for a funding
msgtype,opening_funder_cancel,6013

# Openingd->master: we failed to negotiation channel
msgtype,opening_funder_failed,6004
msgdata,opening_funder_failed,reason,wirestring,

# Openingd->master: they offered channel.
# This gives their txid and info, means we can send funding_signed: we're done.
msgtype,opening_fundee,6003
msgdata,opening_fundee,their_config,channel_config,
msgdata,opening_fundee,first_commit,bitcoin_tx,
msgdata,opening_fundee,pbase,?penalty_base,
msgdata,opening_fundee,first_commit_sig,bitcoin_signature,
msgdata,opening_fundee,pps,per_peer_state,
msgdata,opening_fundee,revocation_basepoint,pubkey,
msgdata,opening_fundee,payment_basepoint,pubkey,
msgdata,opening_fundee,htlc_basepoint,pubkey,
msgdata,opening_fundee,delayed_payment_basepoint,pubkey,
msgdata,opening_fundee,their_per_commit_point,pubkey,
msgdata,opening_fundee,remote_fundingkey,pubkey,
msgdata,opening_fundee,funding_txid,bitcoin_txid,
msgdata,opening_fundee,funding_txout,u16,
msgdata,opening_fundee,funding_satoshis,amount_sat,
msgdata,opening_fundee,push_msat,amount_msat,
msgdata,opening_fundee,channel_flags,u8,
msgdata,opening_fundee,feerate_per_kw,u32,
# The funding signed message: send this and we're committed.
msgdata,opening_fundee,msglen,u16,
msgdata,opening_fundee,funding_signed_msg,u8,msglen
msgdata,opening_fundee,our_channel_reserve_satoshis,amount_sat,
msgdata,opening_fundee,local_shutdown_len,u16,
msgdata,opening_fundee,local_shutdown_scriptpubkey,u8,local_shutdown_len
msgdata,opening_fundee,remote_shutdown_len,u16,
msgdata,opening_fundee,remote_shutdown_scriptpubkey,u8,remote_shutdown_len

# master -> openingd: do you have a memleak?
msgtype,opening_dev_memleak,6033

msgtype,opening_dev_memleak_reply,6133
msgdata,opening_dev_memleak_reply,leak,bool,
