version: 2
jobs:
  # publish jobs require $DOCKERHUB_REPO, $DOCKERHUB_USER, $DOCKERHUB_PASS defined
  amd64:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            LATEST_TAG=${CIRCLE_TAG:8} #trim "basedon-" from tag
            #
            sudo docker build --pull -t $DOCKERHUB_REPO:$LATEST_TAG-amd64 -f Dockerfile .
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-amd64
  arm32v7:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            LATEST_TAG=${CIRCLE_TAG:8} #trim "basedon-" from tag
            # Make sure the builder is copy the arm emulator
            sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
            sed -i -e 's/#EnableQEMU //g' "contrib/linuxarm32v7.Dockerfile"
            #
            sudo docker build --pull -t $DOCKERHUB_REPO:$LATEST_TAG-arm32v7 -f contrib/linuxarm32v7.Dockerfile .
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-arm32v7
  arm64v8:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            LATEST_TAG=${CIRCLE_TAG:8} #trim "basedon-" from tag
            # Make sure the builder is copy the arm emulator
            sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
            sed -i -e 's/#EnableQEMU //g' "contrib/linuxarm64v8.Dockerfile"
            #
            sudo docker build --pull -t $DOCKERHUB_REPO:$LATEST_TAG-arm64v8 -f contrib/linuxarm64v8.Dockerfile .
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-arm64v8
  publish_docker_dev:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            LATEST_TAG=${CIRCLE_TAG:8} #trim "basedon-" from tag
            #
            sudo docker build --build-arg "DEVELOPER=1" --build-arg "TRACE_TOOLS=false" -t "$DOCKERHUB_REPO:$LATEST_TAG-dev" .
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-dev
  publish_docker_bench:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          command: |
            LATEST_TAG=${CIRCLE_TAG:8} #trim "basedon-" from tag
            #
            sudo docker build --build-arg "DEVELOPER=1" --build-arg "TRACE_TOOLS=true" -t "$DOCKERHUB_REPO:$LATEST_TAG-bench" .
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-bench
  multiarch:
    machine:
      enabled: true
      image: circleci/classic:201808-01
    steps:
      - run:
          command: |
            # Turn on Experimental features
            sudo mkdir $HOME/.docker
            sudo sh -c 'echo "{ \"experimental\": \"enabled\" }" >> $HOME/.docker/config.json'
            #
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            #
            LATEST_TAG=${CIRCLE_TAG:8} #trim "basedon-" from tag
            sudo docker manifest create --amend $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-amd64 $DOCKERHUB_REPO:$LATEST_TAG-arm32v7 $DOCKERHUB_REPO:$LATEST_TAG-arm64v8
            sudo docker manifest annotate $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-amd64 --os linux --arch amd64
            sudo docker manifest annotate $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-arm32v7 --os linux --arch arm --variant v7
            sudo docker manifest annotate $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-arm64v8 --os linux --arch arm64 --variant v8
            sudo docker manifest push $DOCKERHUB_REPO:$LATEST_TAG -p

workflows:
  version: 2
  publish:
    jobs:
      - amd64:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /basedon-.+/
      - arm32v7:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /basedon-.+/
      - arm64v8:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /basedon-.+/
      - publish_docker_dev:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /basedon-.+/
      - publish_docker_bench:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /basedon-.+/
      - multiarch:
          requires:
            - amd64
            - arm32v7
            - arm64v8
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /basedon-.+/

