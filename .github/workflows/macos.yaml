---
name: Mac OS pytest
on:
  pull_request:
jobs:
  smoke-test:
    name: Smoke Test macOS
    runs-on: macos-latest
    timeout-minutes: 120
    strategy:
      fail-fast: true
      matrix:
        bitcoind-version: ["27.1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache bitcoind
        id: cache-bitcoind
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/bitcoin*
          key: cache-bitcoind-${{ matrix.bitcoind-version }}

      - name: Download Bitcoin ${{ matrix.bitcoind-version }} & install binaries
        if: ${{ steps.cache-bitcoind.outputs.cache-hit != 'true' }}
        run: |
          export BITCOIND_VERSION=${{ matrix.bitcoind-version }}
          export TARGET_ARCH="arm64-apple-darwin"

          wget https://bitcoincore.org/bin/bitcoin-core-${BITCOIND_VERSION}/bitcoin-${BITCOIND_VERSION}-${TARGET_ARCH}.tar.gz
          tar -xzf bitcoin-${BITCOIND_VERSION}-${TARGET_ARCH}.tar.gz
          sudo mv bitcoin-${BITCOIND_VERSION}/bin/* /usr/local/bin
          rm -rf bitcoin-${BITCOIND_VERSION}-${TARGET_ARCH}.tar.gz bitcoin-${BITCOIND_VERSION}

      - name: Install dependencies
        run: |
          export PATH="/usr/local/opt:/Users/runner/.local/bin:/Users/runner/Library/Python/3.10/bin:$PATH"

          brew install wget autoconf automake libtool python@3.10 gnu-sed gettext libsodium

          python3.10 -m pip install -U --user poetry wheel pip
          python3.10 -m poetry install
          python3.10 -m pip install -U --user mako
          
          ln -s /usr/local/Cellar/gettext/0.20.1/bin/xgettext /usr/local/opt

      - name: Build
        env:
          PYTEST_PAR: ${{ matrix.PYTEST_PAR }}
          PYTEST_OPTS: ${{ matrix.PYTEST_OPTS }}
          NO_PYTHON: ${{ matrix.NO_PYTHON }}
          COPTFLAGS: ${{ matrix.COPTFLAGS }}
          NETWORK: ${{ matrix.NETWORK }}
          TEST_CMD: ${{ matrix.TEST_CMD }}
          TEST_GROUP_COUNT: ${{ matrix.TEST_GROUP_COUNT }}
          TEST_GROUP: ${{ matrix.TEST_GROUP }}
        run: |
          export PATH="/usr/local/opt:/Users/runner/.local/bin:/Users/runner/Library/Python/3.10/bin:/usr/local/opt:$PATH"
          export LDFLAGS="-L/usr/local/opt/sqlite/lib"
          export CPPFLAGS="-I/usr/local/opt/sqlite/include"

          cat << EOF > pytest.ini
          [pytest]
          addopts=-p no:logging --color=yes --timeout=600 --timeout-method=thread --test-group-random-seed=42 --junitxml=report.xml --json-report --json-report-file=report.json --json-report-indent=2
          markers =
              slow_test: marks tests as slow (deselect with '-m "not slow_test"')
          EOF

          python3.10 -m poetry run ./configure --disable-valgrind --disable-compat
          python3.10 -m poetry run make
