name: FreeBSD Test

on:
  push:
    branches:
      - "master"
  pull_request:
  workflow_dispatch:

jobs:
  testfreebsd:
    runs-on: ubuntu-22.04
    name: Build and test on FreeBSD
    timeout-minutes: 120
    strategy:
      fail-fast: true
      matrix:
        bitcoind-version: ["27.1"]
    steps:
    - uses: actions/checkout@v4
    - name: Test in FreeBSD
      id: test
      uses: vmactions/freebsd-vm@v1
      with:
        usesh: true
        sync: rsync
        copyback: false
        prepare: |
          pkg install -y \
            bash \
            wget \
            python310 \
            gmake \
            git \
            python \
            postgresql16-server \
            autoconf \
            automake \
            libtool \
            bash \
            gettext \
            sqlite3 \
            lowdown \
            curl

            python3.10 -m ensurepip
            python3.10 -m pip install --upgrade pip
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly-2024-11-28


        run: |
          PATH=/root/.local/bin:$PATH
          pip install --user -U wheel pip
          pip install --user -U -r requirements.txt

          # Install utilities that aren't dependencies, but make
          # running tests easier/feasible on CI (and pytest which
          # keeps breaking the rerunfailures plugin).
          pip install --user -U \
            blinker \
            flake8 \
            mako \
            pytest-sentry \
            pytest-test-groups==1.0.3 \
            pytest-custom-exit-code==0.3.0 \
            pytest-json-report

          git clone https://github.com/lightning/bolts.git ../bolts
          # fatal: unsafe repository ('/Users/runner/work/lightning/lightning' is owned by someone else)
          git config --global --add safe.directory `pwd`
          git submodule update --init --recursive

          ./configure CC="$CC" --disable-valgrind

          cat config.vars

          cat << EOF > pytest.ini
          [pytest]
          addopts=-p no:logging --color=yes --timeout=1800 --timeout-method=thread --test-group-random-seed=42 --junitxml=report.xml --json-report --json-report-file=report.json --json-report-indent=2
          markers =
              slow_test: marks tests as slow (deselect with '-m "not slow_test"')
          EOF

          # Just run a "quick" test without memory checking
          gmake

          # Clean up to maximize rsync's chances of succeeding
          gmake clean
