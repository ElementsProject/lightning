---
name: Continuous Integration
on:
  push:
    branches:
      - "master"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Makes the upload-artifact work more reliably at the cost
  # of a bit of compile time.
  RUST_PROFILE: release
  SLOW_MACHINE: 1

jobs:
  compile:
    name: Compile CLN ${{ matrix.cfg }}
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    env:
      COMPAT: 1
    strategy:
      fail-fast: true
      matrix:
        include:
          - CFG: gcc-dev1-exp1
            DEVELOPER: 1
            EXPERIMENTAL_FEATURES: 1
            COMPILER: gcc
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          bash -x .github/scripts/setup.sh

      - name: Build
        env:
          VALGRIND: ${{ matrix.VALGRIND }}
          DEVELOPER: ${{ matrix.DEVELOPER }}
          EXPERIMENTAL_FEATURES: ${{ matrix.EXPERIMENTAL_FEATURES }}
          COMPILER: ${{ matrix.COMPILER }}
          COMPAT: 1
          CFG: ${{ matrix.CFG }}
        run: |
          set -e
          pip3 install --user pip wheel poetry
          poetry export -o requirements.txt --with dev --without-hashes
          python3 -m pip install -r requirements.txt
          ./configure CC="$COMPILER"

          make -j $(nproc) testpack.tar.bz2

          # Rename now so we don't clash
          mv testpack.tar.bz2 cln-${CFG}.tar.bz2
      - name: Check rust packages
        run: cargo test --all
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: cln-${{ matrix.CFG }}.tar.bz2
          path: cln-${{ matrix.CFG }}.tar.bz2

  integration:
    name: Test CLN ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    env:
      COMPAT: 1
      BITCOIN_VERSION: 24.0.1
      ELEMENTS_VERSION: 22.0.2
      RUST_PROFILE: release  # Has to match the one in the compile step
    needs:
      - compile
    strategy:
      fail-fast: true
      matrix:
        include:
          - NAME: gcc-dev1-exp1
            CFG: gcc-dev1-exp1
            DEVELOPER: 1
            EXPERIMENTAL_FEATURES: 1
            TEST_DB_PROVIDER: sqlite3
            COMPILER: gcc
            TEST_NETWORK: regtest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          pip3 install --user pip wheel poetry
          poetry install

      - name: Install bitcoind
        run: .github/scripts/install-bitcoind.sh

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: cln-${{ matrix.CFG }}.tar.bz2

      - name: Test
        env:
          VALGRIND: ${{ matrix.VALGRIND }}
          DEVELOPER: ${{ matrix.DEVELOPER }}
          EXPERIMENTAL_FEATURES: ${{ matrix.EXPERIMENTAL_FEATURES }}
          COMPILER: ${{ matrix.COMPILER }}
          COMPAT: 1
          CFG: ${{ matrix.CFG }}
          SLOW_MACHINE: 1
          PYTEST_PAR: 10
          TEST_DEBUG: 1
          TEST_DB_PROVIDER: ${{ matrix.TEST_DB_PROVIDER }}
          TEST_NETWORK: ${{ matrix.TEST_NETWORK }}
        run: |
          tar -xaf cln-${CFG}.tar.bz2
          poetry run pytest tests/ -s -vvv -n ${PYTEST_PAR} ${PYTEST_OPTS}

  integration-valgrind:
    name: Valgrind Test CLN ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    env:
      COMPAT: 1
      BITCOIN_VERSION: 24.0.1
      ELEMENTS_VERSION: 22.0.2
      RUST_PROFILE: release  # Has to match the one in the compile step
      VALGRIND: 1
      CFG: gcc-dev1-exp1
      DEVELOPER: 1
      EXPERIMENTAL_FEATURES: 1
      PYTEST_OPTS: --test-group-random-seed=42
    needs:
      - compile
    strategy:
      fail-fast: true
      matrix:
        include:
          - NAME: Valgrind (03/10)
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          sudo apt-get install -yyq valgrind
          pip3 install --user pip wheel poetry
          poetry install

      - name: Install bitcoind
        run: .github/scripts/install-bitcoind.sh

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: cln-gcc-dev1-exp1.tar.bz2

      - name: Unpack build
        run: tar -xvjf cln-gcc-dev1-exp1.tar.bz2

      - name: Test
        env:
          COMPAT: 1
          SLOW_MACHINE: 1
          TEST_DEBUG: 1
        run: |

          sed -i 's/VALGRIND=0/VALGRIND=1/g' config.vars
          RUST_BACKTRACE=1 poetry run pytest tests/test_cln_rs.py::test_cln_plugin_reentrant -s -vvv ${PYTEST_OPTS}

  gather:
    # A dummy task that depends on the full matrix of tests, and
    # signals successful completion. Used for the PR status to pass
    # before merging.
    name: CI completion
    runs-on: ubuntu-20.04
    needs:
      - integration
      - integration-valgrind
    steps:
      - name: Complete
        run: |
          echo CI completed successfully
