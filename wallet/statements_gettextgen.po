#: wallet/db.c:65
msgid "CREATE TABLE version (version INTEGER)"
msgstr ""

#: wallet/db.c:66
msgid "INSERT INTO version VALUES (1)"
msgstr ""

#: wallet/db.c:67
msgid "CREATE TABLE outputs (  prev_out_tx BLOB, prev_out_index INTEGER, value BIGINT, type INTEGER, status INTEGER, keyindex INTEGER, PRIMARY KEY (prev_out_tx, prev_out_index));"
msgstr ""

#: wallet/db.c:76
msgid "CREATE TABLE vars (  name VARCHAR(32), val VARCHAR(255), PRIMARY KEY (name));"
msgstr ""

#: wallet/db.c:82
msgid "CREATE TABLE shachains (  id BIGSERIAL, min_index BIGINT, num_valid BIGINT, PRIMARY KEY (id));"
msgstr ""

#: wallet/db.c:89
msgid "CREATE TABLE shachain_known (  shachain_id BIGINT REFERENCES shachains(id) ON DELETE CASCADE, pos INTEGER, idx BIGINT, hash BLOB, PRIMARY KEY (shachain_id, pos));"
msgstr ""

#: wallet/db.c:97
msgid "CREATE TABLE peers (  id BIGSERIAL, node_id BLOB UNIQUE, address TEXT, PRIMARY KEY (id));"
msgstr ""

#: wallet/db.c:104
msgid "CREATE TABLE channels (  id BIGSERIAL,  peer_id BIGINT REFERENCES peers(id) ON DELETE CASCADE,  short_channel_id TEXT,  channel_config_local BIGINT,  channel_config_remote BIGINT,  state INTEGER,  funder INTEGER,  channel_flags INTEGER,  minimum_depth INTEGER,  next_index_local BIGINT,  next_index_remote BIGINT,  next_htlc_id BIGINT,  funding_tx_id BLOB,  funding_tx_outnum INTEGER,  funding_satoshi BIGINT,  funding_locked_remote INTEGER,  push_msatoshi BIGINT,  msatoshi_local BIGINT,  fundingkey_remote BLOB,  revocation_basepoint_remote BLOB,  payment_basepoint_remote BLOB,  htlc_basepoint_remote BLOB,  delayed_payment_basepoint_remote BLOB,  per_commit_remote BLOB,  old_per_commit_remote BLOB,  local_feerate_per_kw INTEGER,  remote_feerate_per_kw INTEGER,  shachain_remote_id BIGINT,  shutdown_scriptpubkey_remote BLOB,  shutdown_keyidx_local BIGINT,  last_sent_commit_state BIGINT,  last_sent_commit_id INTEGER,  last_tx BLOB,  last_sig BLOB,  closing_fee_received INTEGER,  closing_sig_received BLOB,  PRIMARY KEY (id));"
msgstr ""

#: wallet/db.c:146
msgid "CREATE TABLE channel_configs (  id BIGSERIAL,  dust_limit_satoshis BIGINT,  max_htlc_value_in_flight_msat BIGINT,  channel_reserve_satoshis BIGINT,  htlc_minimum_msat BIGINT,  to_self_delay INTEGER,  max_accepted_htlcs INTEGER,  PRIMARY KEY (id));"
msgstr ""

#: wallet/db.c:157
msgid "CREATE TABLE channel_htlcs (  id BIGSERIAL,  channel_id BIGINT REFERENCES channels(id) ON DELETE CASCADE,  channel_htlc_id BIGINT,  direction INTEGER,  origin_htlc BIGINT,  msatoshi BIGINT,  cltv_expiry INTEGER,  payment_hash BLOB,  payment_key BLOB,  routing_onion BLOB,  failuremsg BLOB,  malformed_onion INTEGER,  hstate INTEGER,  shared_secret BLOB,  PRIMARY KEY (id),  UNIQUE (channel_id, channel_htlc_id, direction));"
msgstr ""

#: wallet/db.c:177
msgid "CREATE TABLE invoices (  id BIGSERIAL,  state INTEGER,  msatoshi BIGINT,  payment_hash BLOB,  payment_key BLOB,  label TEXT,  PRIMARY KEY (id),  UNIQUE (label),  UNIQUE (payment_hash));"
msgstr ""

#: wallet/db.c:189
msgid "CREATE TABLE payments (  id BIGSERIAL,  timestamp INTEGER,  status INTEGER,  payment_hash BLOB,  direction INTEGER,  destination BLOB,  msatoshi BIGINT,  PRIMARY KEY (id),  UNIQUE (payment_hash));"
msgstr ""

#: wallet/db.c:202
msgid "ALTER TABLE invoices ADD expiry_time BIGINT;"
msgstr ""

#: wallet/db.c:203
msgid "UPDATE invoices SET expiry_time=9223372036854775807;"
msgstr ""

#: wallet/db.c:205
msgid "ALTER TABLE invoices ADD pay_index BIGINT;"
msgstr ""

#: wallet/db.c:206
msgid "CREATE UNIQUE INDEX invoices_pay_index ON invoices(pay_index);"
msgstr ""

#: wallet/db.c:208
msgid "UPDATE invoices SET pay_index=id WHERE state=1;"
msgstr ""

#: wallet/db.c:211
msgid "INSERT INTO vars(name, val)  VALUES('next_pay_index',     COALESCE((SELECT MAX(pay_index) FROM invoices WHERE state=1), 0) + 1  );"
msgstr ""

#: wallet/db.c:220
msgid "ALTER TABLE channels ADD first_blocknum BIGINT;"
msgstr ""

#: wallet/db.c:221
msgid "UPDATE channels SET first_blocknum=1 WHERE short_channel_id IS NOT NULL;"
msgstr ""

#: wallet/db.c:223
msgid "ALTER TABLE outputs ADD COLUMN channel_id BIGINT;"
msgstr ""

#: wallet/db.c:224
msgid "ALTER TABLE outputs ADD COLUMN peer_id BLOB;"
msgstr ""

#: wallet/db.c:225
msgid "ALTER TABLE outputs ADD COLUMN commitment_point BLOB;"
msgstr ""

#: wallet/db.c:226
msgid "ALTER TABLE invoices ADD COLUMN msatoshi_received BIGINT;"
msgstr ""

#: wallet/db.c:228
msgid "UPDATE invoices SET msatoshi_received=0 WHERE state=1;"
msgstr ""

#: wallet/db.c:229
msgid "ALTER TABLE channels ADD COLUMN last_was_revoke INTEGER;"
msgstr ""

#: wallet/db.c:233 wallet/db.c:526
msgid "ALTER TABLE payments RENAME TO temp_payments;"
msgstr ""

#: wallet/db.c:234
msgid "CREATE TABLE payments (  id BIGSERIAL,  timestamp INTEGER,  status INTEGER,  payment_hash BLOB,  destination BLOB,  msatoshi BIGINT,  PRIMARY KEY (id),  UNIQUE (payment_hash));"
msgstr ""

#: wallet/db.c:245
msgid "INSERT INTO payments SELECT id, timestamp, status, payment_hash, destination, msatoshi FROM temp_payments WHERE direction=1;"
msgstr ""

#: wallet/db.c:248 wallet/db.c:601
msgid "DROP TABLE temp_payments;"
msgstr ""

#: wallet/db.c:250
msgid "ALTER TABLE payments ADD COLUMN payment_preimage BLOB;"
msgstr ""

#: wallet/db.c:252
msgid "ALTER TABLE payments ADD COLUMN path_secrets BLOB;"
msgstr ""

#: wallet/db.c:255
msgid "ALTER TABLE invoices ADD paid_timestamp BIGINT;"
msgstr ""

#: wallet/db.c:256
msgid "UPDATE invoices   SET paid_timestamp = CURRENT_TIMESTAMP() WHERE state = 1;"
msgstr ""

#: wallet/db.c:264
msgid "ALTER TABLE payments ADD COLUMN route_nodes BLOB;"
msgstr ""

#: wallet/db.c:265
msgid "ALTER TABLE payments ADD COLUMN route_channels BLOB;"
msgstr ""

#: wallet/db.c:266
msgid "CREATE TABLE htlc_sigs (channelid INTEGER REFERENCES channels(id) ON DELETE CASCADE, signature BLOB);"
msgstr ""

#: wallet/db.c:269
msgid "CREATE INDEX channel_idx ON htlc_sigs (channelid)"
msgstr ""

#: wallet/db.c:271
msgid "DELETE FROM channels WHERE state=1"
msgstr ""

#: wallet/db.c:273
msgid "CREATE TABLE db_upgrades (upgrade_from INTEGER, lightning_version TEXT);"
msgstr ""

#: wallet/db.c:277 wallet/db.c:467
msgid "DELETE FROM peers WHERE id NOT IN (SELECT peer_id FROM channels);"
msgstr ""

#: wallet/db.c:281
msgid "UPDATE channels SET STATE = 8 WHERE state > 8;"
msgstr ""

#: wallet/db.c:283
msgid "ALTER TABLE invoices ADD bolt11 TEXT;"
msgstr ""

#: wallet/db.c:287
msgid "CREATE TABLE blocks (height INT, hash BLOB, prev_hash BLOB, UNIQUE(height));"
msgstr ""

#: wallet/db.c:297
msgid "ALTER TABLE outputs ADD COLUMN confirmation_height INTEGER REFERENCES blocks(height) ON DELETE SET NULL;"
msgstr ""

#: wallet/db.c:300
msgid "ALTER TABLE outputs ADD COLUMN spend_height INTEGER REFERENCES blocks(height) ON DELETE SET NULL;"
msgstr ""

#: wallet/db.c:304
msgid "CREATE INDEX output_height_idx ON outputs (confirmation_height, spend_height);"
msgstr ""

#: wallet/db.c:307
msgid "CREATE TABLE utxoset ( txid BLOB, outnum INT, blockheight INT REFERENCES blocks(height) ON DELETE CASCADE, spendheight INT REFERENCES blocks(height) ON DELETE SET NULL, txindex INT, scriptpubkey BLOB, satoshis BIGINT, PRIMARY KEY(txid, outnum));"
msgstr ""

#: wallet/db.c:317
msgid "CREATE INDEX short_channel_id ON utxoset (blockheight, txindex, outnum)"
msgstr ""

#: wallet/db.c:322
msgid "CREATE INDEX utxoset_spend ON utxoset (spendheight)"
msgstr ""

#: wallet/db.c:324
msgid "UPDATE channels SET shutdown_keyidx_local=0 WHERE shutdown_keyidx_local = -1;"
msgstr ""

#: wallet/db.c:330
msgid "ALTER TABLE payments ADD failonionreply BLOB;"
msgstr ""

#: wallet/db.c:332
msgid "ALTER TABLE payments ADD faildestperm INTEGER;"
msgstr ""

#: wallet/db.c:334
msgid "ALTER TABLE payments ADD failindex INTEGER;"
msgstr ""

#: wallet/db.c:336
msgid "ALTER TABLE payments ADD failcode INTEGER;"
msgstr ""

#: wallet/db.c:337
msgid "ALTER TABLE payments ADD failnode BLOB;"
msgstr ""

#: wallet/db.c:338
msgid "ALTER TABLE payments ADD failchannel TEXT;"
msgstr ""

#: wallet/db.c:340
msgid "ALTER TABLE payments ADD failupdate BLOB;"
msgstr ""

#: wallet/db.c:344
msgid "UPDATE payments   SET path_secrets = NULL     , route_nodes = NULL     , route_channels = NULL WHERE status <> 0;"
msgstr ""

#: wallet/db.c:351
msgid "ALTER TABLE channels ADD in_payments_offered INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:352
msgid "ALTER TABLE channels ADD in_payments_fulfilled INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:353
msgid "ALTER TABLE channels ADD in_msatoshi_offered BIGINT DEFAULT 0;"
msgstr ""

#: wallet/db.c:354
msgid "ALTER TABLE channels ADD in_msatoshi_fulfilled BIGINT DEFAULT 0;"
msgstr ""

#: wallet/db.c:355
msgid "ALTER TABLE channels ADD out_payments_offered INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:356
msgid "ALTER TABLE channels ADD out_payments_fulfilled INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:357
msgid "ALTER TABLE channels ADD out_msatoshi_offered BIGINT DEFAULT 0;"
msgstr ""

#: wallet/db.c:358
msgid "ALTER TABLE channels ADD out_msatoshi_fulfilled BIGINT DEFAULT 0;"
msgstr ""

#: wallet/db.c:359
msgid "UPDATE channels   SET  in_payments_offered = 0,  in_payments_fulfilled = 0     ,  in_msatoshi_offered = 0,  in_msatoshi_fulfilled = 0     , out_payments_offered = 0, out_payments_fulfilled = 0     , out_msatoshi_offered = 0, out_msatoshi_fulfilled = 0     ;"
msgstr ""

#: wallet/db.c:368
msgid "ALTER TABLE payments ADD msatoshi_sent BIGINT;"
msgstr ""

#: wallet/db.c:369
msgid "UPDATE payments SET msatoshi_sent = msatoshi;"
msgstr ""

#: wallet/db.c:371
msgid "DELETE FROM utxoset WHERE blockheight IN (  SELECT DISTINCT(blockheight)  FROM utxoset LEFT OUTER JOIN blocks on (blockheight = blocks.height)   WHERE blocks.hash IS NULL);"
msgstr ""

#: wallet/db.c:379
msgid "ALTER TABLE channels ADD min_possible_feerate INTEGER;"
msgstr ""

#: wallet/db.c:380
msgid "ALTER TABLE channels ADD max_possible_feerate INTEGER;"
msgstr ""

#: wallet/db.c:383
msgid "UPDATE channels SET min_possible_feerate=0, max_possible_feerate=250000;"
msgstr ""

#: wallet/db.c:387
msgid "ALTER TABLE channels ADD msatoshi_to_us_min BIGINT;"
msgstr ""

#: wallet/db.c:388
msgid "ALTER TABLE channels ADD msatoshi_to_us_max BIGINT;"
msgstr ""

#: wallet/db.c:389
msgid "UPDATE channels   SET msatoshi_to_us_min = msatoshi_local     , msatoshi_to_us_max = msatoshi_local     ;"
msgstr ""

#: wallet/db.c:398
msgid "CREATE TABLE transactions (  id BLOB, blockheight INTEGER REFERENCES blocks(height) ON DELETE SET NULL, txindex INTEGER, rawtx BLOB, PRIMARY KEY (id));"
msgstr ""

#: wallet/db.c:407
msgid "ALTER TABLE payments ADD faildetail TEXT;"
msgstr ""

#: wallet/db.c:408
msgid "UPDATE payments   SET faildetail = 'unspecified payment failure reason' WHERE status = 2;"
msgstr ""

#: wallet/db.c:413
msgid "CREATE TABLE channeltxs (  id BIGSERIAL, channel_id BIGINT REFERENCES channels(id) ON DELETE CASCADE, type INTEGER, transaction_id BLOB REFERENCES transactions(id) ON DELETE CASCADE, input_num INTEGER, blockheight INTEGER REFERENCES blocks(height) ON DELETE CASCADE, PRIMARY KEY(id));"
msgstr ""

#: wallet/db.c:429
msgid "DELETE FROM blocks WHERE height > (SELECT MIN(first_blocknum) FROM channels);"
msgstr ""

#: wallet/db.c:435
msgid "INSERT INTO blocks (height) VALUES ((SELECT MIN(first_blocknum) FROM channels)) ON CONFLICT(height) DO NOTHING;"
msgstr ""

#: wallet/db.c:439
msgid "DELETE FROM blocks WHERE height IS NULL;"
msgstr ""

#: wallet/db.c:441
msgid "ALTER TABLE invoices ADD description TEXT;"
msgstr ""

#: wallet/db.c:443
msgid "ALTER TABLE payments ADD description TEXT;"
msgstr ""

#: wallet/db.c:445
msgid "ALTER TABLE channels ADD future_per_commitment_point BLOB;"
msgstr ""

#: wallet/db.c:447
msgid "ALTER TABLE channels ADD last_sent_commit BLOB;"
msgstr ""

#: wallet/db.c:452
msgid "CREATE TABLE forwarded_payments (  in_htlc_id BIGINT REFERENCES channel_htlcs(id) ON DELETE SET NULL, out_htlc_id BIGINT REFERENCES channel_htlcs(id) ON DELETE SET NULL, in_channel_scid BIGINT, out_channel_scid BIGINT, in_msatoshi BIGINT, out_msatoshi BIGINT, state INTEGER, UNIQUE(in_htlc_id, out_htlc_id));"
msgstr ""

#: wallet/db.c:464
msgid "ALTER TABLE payments ADD faildirection INTEGER;"
msgstr ""

#: wallet/db.c:469
msgid "ALTER TABLE outputs ADD scriptpubkey BLOB;"
msgstr ""

#: wallet/db.c:471
msgid "ALTER TABLE payments ADD bolt11 TEXT;"
msgstr ""

#: wallet/db.c:473
msgid "ALTER TABLE channels ADD feerate_base INTEGER;"
msgstr ""

#: wallet/db.c:474
msgid "ALTER TABLE channels ADD feerate_ppm INTEGER;"
msgstr ""

#: wallet/db.c:476
msgid "ALTER TABLE channel_htlcs ADD received_time BIGINT"
msgstr ""

#: wallet/db.c:477
msgid "ALTER TABLE forwarded_payments ADD received_time BIGINT"
msgstr ""

#: wallet/db.c:478
msgid "ALTER TABLE forwarded_payments ADD resolved_time BIGINT"
msgstr ""

#: wallet/db.c:479
msgid "ALTER TABLE channels ADD remote_upfront_shutdown_script BLOB;"
msgstr ""

#: wallet/db.c:482
msgid "ALTER TABLE forwarded_payments ADD failcode INTEGER;"
msgstr ""

#: wallet/db.c:484
msgid "ALTER TABLE channels ADD remote_ann_node_sig BLOB;"
msgstr ""

#: wallet/db.c:485
msgid "ALTER TABLE channels ADD remote_ann_bitcoin_sig BLOB;"
msgstr ""

#: wallet/db.c:487
msgid "ALTER TABLE transactions ADD type BIGINT;"
msgstr ""

#: wallet/db.c:492
msgid "ALTER TABLE transactions ADD channel_id BIGINT;"
msgstr ""

#: wallet/db.c:494
msgid "UPDATE channels SET short_channel_id = REPLACE(short_channel_id, ':', 'x') WHERE short_channel_id IS NOT NULL;"
msgstr ""

#: wallet/db.c:497
msgid "UPDATE payments SET failchannel = REPLACE(failchannel, ':', 'x') WHERE failchannel IS NOT NULL;"
msgstr ""

#: wallet/db.c:500
msgid "ALTER TABLE channels ADD COLUMN option_static_remotekey INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:502
msgid "ALTER TABLE vars ADD COLUMN intval INTEGER"
msgstr ""

#: wallet/db.c:503
msgid "ALTER TABLE vars ADD COLUMN blobval BLOB"
msgstr ""

#: wallet/db.c:504
msgid "UPDATE vars SET intval = CAST(val AS INTEGER) WHERE name IN ('bip32_max_index', 'last_processed_block', 'next_pay_index')"
msgstr ""

#: wallet/db.c:505
msgid "UPDATE vars SET blobval = CAST(val AS BLOB) WHERE name = 'genesis_hash'"
msgstr ""

#: wallet/db.c:506
msgid "CREATE TABLE transaction_annotations (  txid BLOB, idx INTEGER, location INTEGER, type INTEGER, channel BIGINT REFERENCES channels(id), UNIQUE(txid, idx));"
msgstr ""

#: wallet/db.c:518
msgid "ALTER TABLE channels ADD shutdown_scriptpubkey_local BLOB;"
msgstr ""

#: wallet/db.c:521
msgid "UPDATE forwarded_payments SET received_time=0 WHERE received_time IS NULL;"
msgstr ""

#: wallet/db.c:523
msgid "ALTER TABLE invoices ADD COLUMN features BLOB DEFAULT '';"
msgstr ""

#: wallet/db.c:527
msgid "CREATE TABLE payments ( id BIGSERIAL, timestamp INTEGER, status INTEGER, payment_hash BLOB, destination BLOB, msatoshi BIGINT, payment_preimage BLOB, path_secrets BLOB, route_nodes BLOB, route_channels BLOB, failonionreply BLOB, faildestperm INTEGER, failindex INTEGER, failcode INTEGER, failnode BLOB, failchannel TEXT, failupdate BLOB, msatoshi_sent BIGINT, faildetail TEXT, description TEXT, faildirection INTEGER, bolt11 TEXT, total_msat BIGINT, partid BIGINT, PRIMARY KEY (id), UNIQUE (payment_hash, partid))"
msgstr ""

#: wallet/db.c:554
msgid "INSERT INTO payments (id, timestamp, status, payment_hash, destination, msatoshi, payment_preimage, path_secrets, route_nodes, route_channels, failonionreply, faildestperm, failindex, failcode, failnode, failchannel, failupdate, msatoshi_sent, faildetail, description, faildirection, bolt11)SELECT id, timestamp, status, payment_hash, destination, msatoshi, payment_preimage, path_secrets, route_nodes, route_channels, failonionreply, faildestperm, failindex, failcode, failnode, failchannel, failupdate, msatoshi_sent, faildetail, description, faildirection, bolt11 FROM temp_payments;"
msgstr ""

#: wallet/db.c:599
msgid "UPDATE payments SET total_msat = msatoshi;"
msgstr ""

#: wallet/db.c:600
msgid "UPDATE payments SET partid = 0;"
msgstr ""

#: wallet/db.c:602
msgid "ALTER TABLE channel_htlcs ADD partid BIGINT;"
msgstr ""

#: wallet/db.c:603
msgid "UPDATE channel_htlcs SET partid = 0;"
msgstr ""

#: wallet/db.c:604
msgid "CREATE TABLE channel_feerates (  channel_id BIGINT REFERENCES channels(id) ON DELETE CASCADE,  hstate INTEGER,  feerate_per_kw INTEGER,  UNIQUE (channel_id, hstate));"
msgstr ""

#: wallet/db.c:615
msgid "INSERT INTO channel_feerates(channel_id, hstate, feerate_per_kw) SELECT id, 4, local_feerate_per_kw FROM channels WHERE funder = 0;"
msgstr ""

#: wallet/db.c:619
msgid "INSERT INTO channel_feerates(channel_id, hstate, feerate_per_kw) SELECT id, 1, remote_feerate_per_kw FROM channels WHERE funder = 0 and local_feerate_per_kw != remote_feerate_per_kw;"
msgstr ""

#: wallet/db.c:624
msgid "INSERT INTO channel_feerates(channel_id, hstate, feerate_per_kw) SELECT id, 14, remote_feerate_per_kw FROM channels WHERE funder = 1;"
msgstr ""

#: wallet/db.c:628
msgid "INSERT INTO channel_feerates(channel_id, hstate, feerate_per_kw) SELECT id, 11, local_feerate_per_kw FROM channels WHERE funder = 1 and local_feerate_per_kw != remote_feerate_per_kw;"
msgstr ""

#: wallet/db.c:632
msgid "INSERT INTO vars (name, intval) VALUES ('data_version', 0);"
msgstr ""

#: wallet/db.c:635
msgid "ALTER TABLE channel_htlcs ADD localfailmsg BLOB;"
msgstr ""

#: wallet/db.c:636
msgid "UPDATE channel_htlcs SET localfailmsg=decode('2002', 'hex') WHERE malformed_onion != 0 AND direction = 1;"
msgstr ""

#: wallet/db.c:637
msgid "ALTER TABLE channels ADD our_funding_satoshi BIGINT DEFAULT 0;"
msgstr ""

#: wallet/db.c:638
msgid "CREATE TABLE penalty_bases (  channel_id BIGINT REFERENCES channels(id) ON DELETE CASCADE, commitnum BIGINT, txid BLOB, outnum INTEGER, amount BIGINT, PRIMARY KEY (channel_id, commitnum));"
msgstr ""

#: wallet/db.c:648
msgid "ALTER TABLE channel_htlcs ADD we_filled INTEGER;"
msgstr ""

#: wallet/db.c:650
msgid "INSERT INTO vars (name, intval) VALUES ('coin_moves_count', 0);"
msgstr ""

#: wallet/db.c:652
msgid "ALTER TABLE outputs ADD reserved_til INTEGER DEFAULT NULL;"
msgstr ""

#: wallet/db.c:655
msgid "ALTER TABLE channels ADD COLUMN option_anchor_outputs INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:658
msgid "ALTER TABLE outputs ADD option_anchor_outputs INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:660
msgid "ALTER TABLE channels ADD full_channel_id BLOB DEFAULT NULL;"
msgstr ""

#: wallet/db.c:661
msgid "ALTER TABLE channels ADD funding_psbt BLOB DEFAULT NULL;"
msgstr ""

#: wallet/db.c:663
msgid "ALTER TABLE channels ADD closer INTEGER DEFAULT 2;"
msgstr ""

#: wallet/db.c:664
msgid "ALTER TABLE channels ADD state_change_reason INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:665
msgid "CREATE TABLE channel_state_changes (  channel_id BIGINT REFERENCES channels(id) ON DELETE CASCADE,  timestamp BIGINT,  old_state INTEGER,  new_state INTEGER,  cause INTEGER,  message TEXT);"
msgstr ""

#: wallet/db.c:673
msgid "CREATE TABLE offers (  offer_id BLOB, bolt12 TEXT, label TEXT, status INTEGER, PRIMARY KEY (offer_id));"
msgstr ""

#: wallet/db.c:681
msgid "ALTER TABLE invoices ADD COLUMN local_offer_id BLOB DEFAULT NULL REFERENCES offers(offer_id);"
msgstr ""

#: wallet/db.c:683
msgid "ALTER TABLE payments ADD COLUMN local_offer_id BLOB DEFAULT NULL REFERENCES offers(offer_id);"
msgstr ""

#: wallet/db.c:684
msgid "ALTER TABLE channels ADD funding_tx_remote_sigs_received INTEGER DEFAULT 0;"
msgstr ""

#: wallet/db.c:687
msgid "CREATE INDEX forwarded_payments_out_htlc_id ON forwarded_payments (out_htlc_id);"
msgstr ""

#: wallet/db.c:689
msgid "UPDATE channel_htlcs SET malformed_onion = 0 WHERE malformed_onion IS NULL"
msgstr ""

#: wallet/db.c:691
msgid "CREATE INDEX forwarded_payments_state ON forwarded_payments (state)"
msgstr ""

#: wallet/db.c:692
msgid "CREATE TABLE channel_funding_inflights (  channel_id BIGSERIAL REFERENCES channels(id) ON DELETE CASCADE, funding_tx_id BLOB, funding_tx_outnum INTEGER, funding_feerate INTEGER, funding_satoshi BIGINT, our_funding_satoshi BIGINT, funding_psbt BLOB, last_tx BLOB, last_sig BLOB, funding_tx_remote_sigs_received INTEGER, PRIMARY KEY (channel_id, funding_tx_id));"
msgstr ""

#: wallet/db.c:706
msgid "ALTER TABLE channels ADD revocation_basepoint_local BLOB"
msgstr ""

#: wallet/db.c:707
msgid "ALTER TABLE channels ADD payment_basepoint_local BLOB"
msgstr ""

#: wallet/db.c:708
msgid "ALTER TABLE channels ADD htlc_basepoint_local BLOB"
msgstr ""

#: wallet/db.c:709
msgid "ALTER TABLE channels ADD delayed_payment_basepoint_local BLOB"
msgstr ""

#: wallet/db.c:710
msgid "ALTER TABLE channels ADD funding_pubkey_local BLOB"
msgstr ""

#: wallet/db.c:713
msgid "ALTER TABLE channels ADD shutdown_wrong_txid BLOB DEFAULT NULL"
msgstr ""

#: wallet/db.c:714
msgid "ALTER TABLE channels ADD shutdown_wrong_outnum INTEGER DEFAULT NULL"
msgstr ""

#: wallet/db.c:941
msgid "UPDATE vars SET intval = intval + 1 WHERE name = 'data_version' AND intval = ?"
msgstr ""

#: wallet/db.c:1041
msgid "SELECT version FROM version LIMIT 1"
msgstr ""

#: wallet/db.c:1103
msgid "UPDATE version SET version=?;"
msgstr ""

#: wallet/db.c:1111
msgid "INSERT INTO db_upgrades VALUES (?, ?);"
msgstr ""

#: wallet/db.c:1123
msgid "SELECT intval FROM vars WHERE name = 'data_version'"
msgstr ""

#: wallet/db.c:1150
msgid "SELECT intval FROM vars WHERE name= ? LIMIT 1"
msgstr ""

#: wallet/db.c:1166
msgid "UPDATE vars SET intval=? WHERE name=?;"
msgstr ""

#: wallet/db.c:1175
msgid "INSERT INTO vars (name, intval) VALUES (?, ?);"
msgstr ""

#: wallet/db.c:1189
msgid "UPDATE channels SET feerate_base = ?, feerate_ppm = ?;"
msgstr ""

#: wallet/db.c:1210
msgid "UPDATE channels SET our_funding_satoshi = funding_satoshi WHERE funder = 0;"
msgstr ""

#: wallet/db.c:1226
msgid "SELECT type, keyindex, prev_out_tx, prev_out_index, channel_id, peer_id, commitment_point FROM outputs WHERE scriptpubkey IS NULL;"
msgstr ""

#: wallet/db.c:1288
msgid "UPDATE outputs SET scriptpubkey = ? WHERE prev_out_tx = ?    AND prev_out_index = ?"
msgstr ""

#: wallet/db.c:1313
msgid "SELECT id, funding_tx_id, funding_tx_outnum FROM channels;"
msgstr ""

#: wallet/db.c:1332
msgid "UPDATE channels SET full_channel_id = ? WHERE id = ?;"
msgstr ""

#: wallet/db.c:1353
msgid "SELECT  channels.id, peers.node_id FROM  channels JOIN  peers ON (peers.id = channels.peer_id)"
msgstr ""

#: wallet/db.c:1386
msgid "UPDATE channels SET  revocation_basepoint_local = ?, payment_basepoint_local = ?, htlc_basepoint_local = ?, delayed_payment_basepoint_local = ?, funding_pubkey_local = ? WHERE id = ?;"
msgstr ""

#: wallet/db.c:1417
msgid "SELECT   c.id, p.node_id, c.last_tx, c.funding_satoshi, c.fundingkey_remote, c.last_sig FROM channels c  LEFT OUTER JOIN peers p  ON p.id = c.peer_id;"
msgstr ""

#: wallet/db.c:1484
msgid "UPDATE channels SET last_tx = ? WHERE id = ?;"
msgstr ""

#: wallet/invoices.c:135
msgid "UPDATE invoices   SET state = ? WHERE state = ?   AND expiry_time <= ?;"
msgstr ""

#: wallet/invoices.c:183
msgid "SELECT id  FROM invoices WHERE state = ?   AND expiry_time <= ?"
msgstr ""

#: wallet/invoices.c:222
msgid "SELECT MIN(expiry_time)  FROM invoices WHERE state = ?;"
msgstr ""

#: wallet/invoices.c:289
msgid "INSERT INTO invoices            ( payment_hash, payment_key, state            , msatoshi, label, expiry_time            , pay_index, msatoshi_received            , paid_timestamp, bolt11, description, features, local_offer_id)     VALUES ( ?, ?, ?            , ?, ?, ?            , NULL, NULL            , NULL, ?, ?, ?, ?);"
msgstr ""

#: wallet/invoices.c:344
msgid "SELECT id  FROM invoices WHERE label = ?;"
msgstr ""

#: wallet/invoices.c:366
msgid "SELECT id  FROM invoices WHERE payment_hash = ?;"
msgstr ""

#: wallet/invoices.c:387
msgid "SELECT id  FROM invoices WHERE payment_hash = ?   AND state = ?;"
msgstr ""

#: wallet/invoices.c:411
msgid "DELETE FROM invoices WHERE id=?;"
msgstr ""

#: wallet/invoices.c:431
msgid "DELETE FROM invoices WHERE state = ?   AND expiry_time <= ?;"
msgstr ""

#: wallet/invoices.c:445
msgid "SELECT  state, payment_key, payment_hash, label, msatoshi, expiry_time, pay_index, msatoshi_received, paid_timestamp, bolt11, description, features FROM invoices ORDER BY id;"
msgstr ""

#: wallet/invoices.c:502
msgid "SELECT state FROM invoices WHERE id = ?;"
msgstr ""

#: wallet/invoices.c:520
msgid "SELECT local_offer_id FROM invoices WHERE id = ?;"
msgstr ""

#: wallet/invoices.c:552
msgid "UPDATE invoices   SET state=?     , pay_index=?     , msatoshi_received=?     , paid_timestamp=? WHERE id=?;"
msgstr ""

#: wallet/invoices.c:611
msgid "SELECT id  FROM invoices WHERE pay_index IS NOT NULL   AND pay_index > ? ORDER BY pay_index ASC LIMIT 1;"
msgstr ""

#: wallet/invoices.c:660
msgid "SELECT  state, payment_key, payment_hash, label, msatoshi, expiry_time, pay_index, msatoshi_received, paid_timestamp, bolt11, description, features, local_offer_id FROM invoices WHERE id = ?;"
msgstr ""

#: wallet/wallet.c:50
msgid "SELECT txid, outnum FROM utxoset WHERE spendheight is NULL"
msgstr ""

#: wallet/wallet.c:91 wallet/wallet.c:569
msgid "SELECT * from outputs WHERE prev_out_tx=? AND prev_out_index=?"
msgstr ""

#: wallet/wallet.c:105 wallet/wallet.c:583
msgid "INSERT INTO outputs (  prev_out_tx, prev_out_index, value, type, status, keyindex, channel_id, peer_id, commitment_point, option_anchor_outputs, confirmation_height, spend_height, scriptpubkey) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:222
msgid "UPDATE outputs SET status=? WHERE status=? AND prev_out_tx=? AND prev_out_index=?"
msgstr ""

#: wallet/wallet.c:230
msgid "UPDATE outputs SET status=? WHERE prev_out_tx=? AND prev_out_index=?"
msgstr ""

#: wallet/wallet.c:249
msgid "SELECT  prev_out_tx, prev_out_index, value, type, status, keyindex, channel_id, peer_id, commitment_point, option_anchor_outputs, confirmation_height, spend_height, scriptpubkey , reserved_til FROM outputs"
msgstr ""

#: wallet/wallet.c:266
msgid "SELECT  prev_out_tx, prev_out_index, value, type, status, keyindex, channel_id, peer_id, commitment_point, option_anchor_outputs, confirmation_height, spend_height, scriptpubkey , reserved_til FROM outputs WHERE status= ? "
msgstr ""

#: wallet/wallet.c:304
msgid "SELECT  prev_out_tx, prev_out_index, value, type, status, keyindex, channel_id, peer_id, commitment_point, option_anchor_outputs, confirmation_height, spend_height, scriptpubkey, reserved_til FROM outputs WHERE channel_id IS NOT NULL AND confirmation_height IS NULL"
msgstr ""

#: wallet/wallet.c:341
msgid "SELECT  prev_out_tx, prev_out_index, value, type, status, keyindex, channel_id, peer_id, commitment_point, option_anchor_outputs, confirmation_height, spend_height, scriptpubkey, reserved_til FROM outputs WHERE prev_out_tx = ? AND prev_out_index = ?"
msgstr ""

#: wallet/wallet.c:433
msgid "UPDATE outputs SET status=?, reserved_til=? WHERE prev_out_tx=? AND prev_out_index=?"
msgstr ""

#: wallet/wallet.c:518
msgid "SELECT  prev_out_tx, prev_out_index, value, type, status, keyindex, channel_id, peer_id, commitment_point, option_anchor_outputs, confirmation_height, spend_height, scriptpubkey , reserved_til FROM outputs WHERE status = ? OR (status = ? AND reserved_til <= ?)ORDER BY RANDOM();"
msgstr ""

#: wallet/wallet.c:687
msgid "INSERT INTO shachains (min_index, num_valid) VALUES (?, 0);"
msgstr ""

#: wallet/wallet.c:731
msgid "UPDATE shachains SET num_valid=?, min_index=? WHERE id=?"
msgstr ""

#: wallet/wallet.c:738
msgid "UPDATE shachain_known SET idx=?, hash=? WHERE shachain_id=? AND pos=?"
msgstr ""

#: wallet/wallet.c:750
msgid "INSERT INTO shachain_known (shachain_id, pos, idx, hash) VALUES (?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:772
msgid "SELECT min_index, num_valid FROM shachains WHERE id=?"
msgstr ""

#: wallet/wallet.c:787
msgid "SELECT idx, hash, pos FROM shachain_known WHERE shachain_id=?"
msgstr ""

#: wallet/wallet.c:810
msgid "SELECT id, node_id, address FROM peers WHERE id=?;"
msgstr ""

#: wallet/wallet.c:842
msgid "SELECT signature FROM htlc_sigs WHERE channelid = ?"
msgstr ""

#: wallet/wallet.c:876
msgid "SELECT remote_ann_node_sig, remote_ann_bitcoin_sig FROM channels WHERE id = ?"
msgstr ""

#: wallet/wallet.c:920
msgid "SELECT hstate, feerate_per_kw FROM channel_feerates WHERE channel_id = ?"
msgstr ""

#: wallet/wallet.c:953
msgid "INSERT INTO channel_funding_inflights (  channel_id, funding_tx_id, funding_tx_outnum, funding_feerate, funding_satoshi, our_funding_satoshi, funding_psbt, last_tx, last_sig) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:988
msgid "UPDATE channel_funding_inflights SET  funding_psbt=?, funding_tx_remote_sigs_received=? WHERE  channel_id=? AND funding_tx_id=? AND funding_tx_outnum=?"
msgstr ""

#: wallet/wallet.c:1041
msgid "SELECT  funding_tx_id, funding_tx_outnum, funding_feerate, funding_satoshi, our_funding_satoshi, funding_psbt, last_tx, last_sig, funding_tx_remote_sigs_received FROM channel_funding_inflights WHERE channel_id = ?"
msgstr ""

#: wallet/wallet.c:1269
msgid "SELECT id FROM channels ORDER BY id DESC LIMIT 1;"
msgstr ""

#: wallet/wallet.c:1286
msgid "SELECT  id, peer_id, short_channel_id, full_channel_id, channel_config_local, channel_config_remote, state, funder, channel_flags, minimum_depth, next_index_local, next_index_remote, next_htlc_id, funding_tx_id, funding_tx_outnum, funding_satoshi, our_funding_satoshi, funding_locked_remote, push_msatoshi, msatoshi_local, fundingkey_remote, revocation_basepoint_remote, payment_basepoint_remote, htlc_basepoint_remote, delayed_payment_basepoint_remote, per_commit_remote, old_per_commit_remote, local_feerate_per_kw, remote_feerate_per_kw, shachain_remote_id, shutdown_scriptpubkey_remote, shutdown_keyidx_local, last_sent_commit_state, last_sent_commit_id, last_tx, last_sig, last_was_revoke, first_blocknum, min_possible_feerate, max_possible_feerate, msatoshi_to_us_min, msatoshi_to_us_max, future_per_commitment_point, last_sent_commit, feerate_base, feerate_ppm, remote_upfront_shutdown_script, option_static_remotekey, option_anchor_outputs, shutdown_scriptpubkey_local, closer, state_change_reason, revocation_basepoint_local, payment_basepoint_local, htlc_basepoint_local, delayed_payment_basepoint_local, funding_pubkey_local, shutdown_wrong_txid, shutdown_wrong_outnum FROM channels WHERE state != ?;"
msgstr ""

#: wallet/wallet.c:1384
msgid "UPDATE channels   SET in_payments_offered = COALESCE(in_payments_offered, 0) + 1     , in_msatoshi_offered = COALESCE(in_msatoshi_offered, 0) + ? WHERE id = ?;"
msgstr ""

#: wallet/wallet.c:1389
msgid "UPDATE channels   SET in_payments_fulfilled = COALESCE(in_payments_fulfilled, 0) + 1     , in_msatoshi_fulfilled = COALESCE(in_msatoshi_fulfilled, 0) + ? WHERE id = ?;"
msgstr ""

#: wallet/wallet.c:1394
msgid "UPDATE channels   SET out_payments_offered = COALESCE(out_payments_offered, 0) + 1     , out_msatoshi_offered = COALESCE(out_msatoshi_offered, 0) + ? WHERE id = ?;"
msgstr ""

#: wallet/wallet.c:1399
msgid "UPDATE channels   SET out_payments_fulfilled = COALESCE(out_payments_fulfilled, 0) + 1     , out_msatoshi_fulfilled = COALESCE(out_msatoshi_fulfilled, 0) + ? WHERE id = ?;"
msgstr ""

#: wallet/wallet.c:1441
msgid "SELECT   in_payments_offered,  in_payments_fulfilled,  in_msatoshi_offered,  in_msatoshi_fulfilled, out_payments_offered, out_payments_fulfilled, out_msatoshi_offered, out_msatoshi_fulfilled  FROM channels WHERE id = ?"
msgstr ""

#: wallet/wallet.c:1470
msgid "SELECT MIN(height), MAX(height) FROM blocks;"
msgstr ""

#: wallet/wallet.c:1492
msgid "INSERT INTO channel_configs DEFAULT VALUES;"
msgstr ""

#: wallet/wallet.c:1504
msgid "UPDATE channel_configs SET  dust_limit_satoshis=?,  max_htlc_value_in_flight_msat=?,  channel_reserve_satoshis=?,  htlc_minimum_msat=?,  to_self_delay=?,  max_accepted_htlcs=? WHERE id=?;"
msgstr ""

#: wallet/wallet.c:1528
msgid "SELECT id, dust_limit_satoshis, max_htlc_value_in_flight_msat, channel_reserve_satoshis, htlc_minimum_msat, to_self_delay, max_accepted_htlcs FROM channel_configs WHERE id= ? ;"
msgstr ""

#: wallet/wallet.c:1562
msgid "UPDATE channels SET  remote_ann_node_sig=?,  remote_ann_bitcoin_sig=? WHERE id=?"
msgstr ""

#: wallet/wallet.c:1581
msgid "UPDATE channels SET  shachain_remote_id=?,  short_channel_id=?,  full_channel_id=?,  state=?,  funder=?,  channel_flags=?,  minimum_depth=?,  next_index_local=?,  next_index_remote=?,  next_htlc_id=?,  funding_tx_id=?,  funding_tx_outnum=?,  funding_satoshi=?,  our_funding_satoshi=?,  funding_locked_remote=?,  push_msatoshi=?,  msatoshi_local=?,  shutdown_scriptpubkey_remote=?,  shutdown_keyidx_local=?,  channel_config_local=?,  last_tx=?, last_sig=?,  last_was_revoke=?,  min_possible_feerate=?,  max_possible_feerate=?,  msatoshi_to_us_min=?,  msatoshi_to_us_max=?,  feerate_base=?,  feerate_ppm=?,  remote_upfront_shutdown_script=?,  option_static_remotekey=?,  option_anchor_outputs=?,  shutdown_scriptpubkey_local=?,  closer=?,  state_change_reason=?,  shutdown_wrong_txid=?,  shutdown_wrong_outnum=? WHERE id=?"
msgstr ""

#: wallet/wallet.c:1673
msgid "UPDATE channels SET  fundingkey_remote=?,  revocation_basepoint_remote=?,  payment_basepoint_remote=?,  htlc_basepoint_remote=?,  delayed_payment_basepoint_remote=?,  per_commit_remote=?,  old_per_commit_remote=?,  channel_config_remote=?,  future_per_commitment_point=? WHERE id=?"
msgstr ""

#: wallet/wallet.c:1700
msgid "DELETE FROM channel_feerates WHERE channel_id=?"
msgstr ""

#: wallet/wallet.c:1710
msgid "INSERT INTO channel_feerates  VALUES(?, ?, ?)"
msgstr ""

#: wallet/wallet.c:1727
msgid "UPDATE channels SET  last_sent_commit=? WHERE id=?"
msgstr ""

#: wallet/wallet.c:1750
msgid "INSERT INTO channel_state_changes (  channel_id, timestamp, old_state, new_state, cause, message) VALUES (?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:1778
msgid "SELECT timestamp, old_state, new_state, cause, message FROM channel_state_changes WHERE channel_id = ? ORDER BY timestamp ASC;"
msgstr ""

#: wallet/wallet.c:1807
msgid "SELECT id FROM peers WHERE node_id = ?"
msgstr ""

#: wallet/wallet.c:1819
msgid "UPDATE peers SET address = ? WHERE id = ?"
msgstr ""

#: wallet/wallet.c:1828
msgid "INSERT INTO peers (node_id, address) VALUES (?, ?);"
msgstr ""

#: wallet/wallet.c:1849
msgid "INSERT INTO channels (  peer_id, first_blocknum, id, revocation_basepoint_local, payment_basepoint_local, htlc_basepoint_local, delayed_payment_basepoint_local, funding_pubkey_local) VALUES (?, ?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:1890
msgid "DELETE FROM channel_htlcs WHERE channel_id=?"
msgstr ""

#: wallet/wallet.c:1896
msgid "DELETE FROM htlc_sigs WHERE channelid=?"
msgstr ""

#: wallet/wallet.c:1902
msgid "DELETE FROM channeltxs WHERE channel_id=?"
msgstr ""

#: wallet/wallet.c:1909
msgid "DELETE FROM channel_funding_inflights  WHERE channel_id=?"
msgstr ""

#: wallet/wallet.c:1915
msgid "DELETE FROM shachains WHERE id IN (  SELECT shachain_remote_id   FROM channels   WHERE channels.id=?)"
msgstr ""

#: wallet/wallet.c:1925
msgid "UPDATE channels SET state=?, peer_id=? WHERE channels.id=?"
msgstr ""

#: wallet/wallet.c:1939
msgid "SELECT * FROM channels WHERE peer_id = ?;"
msgstr ""

#: wallet/wallet.c:1947
msgid "DELETE FROM peers WHERE id=?"
msgstr ""

#: wallet/wallet.c:1958
msgid "UPDATE outputs SET confirmation_height = ? WHERE prev_out_tx = ?"
msgstr ""

#: wallet/wallet.c:2061
msgid "INSERT INTO channel_htlcs ( channel_id, channel_htlc_id,  direction, msatoshi, cltv_expiry, payment_hash,  payment_key, hstate, shared_secret, routing_onion, received_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:2114
msgid "INSERT INTO channel_htlcs ( channel_id, channel_htlc_id, direction, origin_htlc, msatoshi, cltv_expiry, payment_hash, payment_key, hstate, routing_onion, malformed_onion, partid) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 0, ?);"
msgstr ""

#: wallet/wallet.c:2175
msgid "UPDATE channel_htlcs SET hstate=?, payment_key=?, malformed_onion=?, failuremsg=?, localfailmsg=?, we_filled=? WHERE id=?"
msgstr ""

#: wallet/wallet.c:2391
msgid "SELECT  id, channel_htlc_id, msatoshi, cltv_expiry, hstate, payment_hash, payment_key, routing_onion, failuremsg, malformed_onion, origin_htlc, shared_secret, received_time, we_filled FROM channel_htlcs WHERE direction= ? AND channel_id= ? AND hstate != ?"
msgstr ""

#: wallet/wallet.c:2438
msgid "SELECT  id, channel_htlc_id, msatoshi, cltv_expiry, hstate, payment_hash, payment_key, routing_onion, failuremsg, malformed_onion, origin_htlc, shared_secret, received_time, partid, localfailmsg FROM channel_htlcs WHERE direction = ? AND channel_id = ? AND hstate != ?"
msgstr ""

#: wallet/wallet.c:2569
msgid "SELECT channel_id, direction, cltv_expiry, channel_htlc_id, payment_hash FROM channel_htlcs WHERE channel_id = ?;"
msgstr ""

#: wallet/wallet.c:2603
msgid "DELETE FROM channel_htlcs WHERE direction = ? AND origin_htlc = ? AND payment_hash = ? AND partid = ?;"
msgstr ""

#: wallet/wallet.c:2656
msgid "SELECT status FROM payments WHERE payment_hash=? AND partid = ?;"
msgstr ""

#: wallet/wallet.c:2674
msgid "INSERT INTO payments (  status,  payment_hash,  destination,  msatoshi,  timestamp,  path_secrets,  route_nodes,  route_channels,  msatoshi_sent,  description,  bolt11,  total_msat,  partid,  local_offer_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:2763
msgid "DELETE FROM payments WHERE payment_hash = ? AND partid = ?"
msgstr ""

#: wallet/wallet.c:2777
msgid "DELETE FROM payments WHERE payment_hash = ?"
msgstr ""

#: wallet/wallet.c:2878
msgid "SELECT  id, status, destination, msatoshi, payment_hash, timestamp, payment_preimage, path_secrets, route_nodes, route_channels, msatoshi_sent, description, bolt11, failonionreply, total_msat, partid, local_offer_id FROM payments WHERE payment_hash = ? AND partid = ?"
msgstr ""

#: wallet/wallet.c:2928
msgid "UPDATE payments SET status=? WHERE payment_hash=? AND partid=?"
msgstr ""

#: wallet/wallet.c:2938
msgid "UPDATE payments SET payment_preimage=? WHERE payment_hash=? AND partid=?"
msgstr ""

#: wallet/wallet.c:2948
msgid "UPDATE payments   SET path_secrets = NULL     , route_nodes = NULL     , route_channels = NULL WHERE payment_hash = ? AND partid = ?;"
msgstr ""

#: wallet/wallet.c:2980
msgid "SELECT failonionreply, faildestperm, failindex, failcode, failnode, failchannel, failupdate, faildetail, faildirection  FROM payments WHERE payment_hash=? AND partid=?;"
msgstr ""

#: wallet/wallet.c:3047
msgid "UPDATE payments   SET failonionreply=?     , faildestperm=?     , failindex=?     , failcode=?     , failnode=?     , failchannel=?     , failupdate=?     , faildetail=?     , faildirection=? WHERE payment_hash=? AND partid=?;"
msgstr ""

#: wallet/wallet.c:3106
msgid "SELECT  id, status, destination, msatoshi, payment_hash, timestamp, payment_preimage, path_secrets, route_nodes, route_channels, msatoshi_sent, description, bolt11, failonionreply, total_msat, partid, local_offer_id FROM payments WHERE payment_hash = ?;"
msgstr ""

#: wallet/wallet.c:3128
msgid "SELECT  id, status, destination, msatoshi, payment_hash, timestamp, payment_preimage, path_secrets, route_nodes, route_channels, msatoshi_sent, description, bolt11, failonionreply, total_msat, partid, local_offer_id FROM payments ORDER BY id;"
msgstr ""

#: wallet/wallet.c:3179
msgid "SELECT  id, status, destination, msatoshi, payment_hash, timestamp, payment_preimage, path_secrets, route_nodes, route_channels, msatoshi_sent, description, bolt11, failonionreply, total_msat, partid, local_offer_id FROM payments WHERE local_offer_id = ?;"
msgstr ""

#: wallet/wallet.c:3224
msgid "DELETE FROM htlc_sigs WHERE channelid = ?"
msgstr ""

#: wallet/wallet.c:3231
msgid "INSERT INTO htlc_sigs (channelid, signature) VALUES (?, ?)"
msgstr ""

#: wallet/wallet.c:3243
msgid "SELECT blobval FROM vars WHERE name='genesis_hash'"
msgstr ""

#: wallet/wallet.c:3267
msgid "INSERT INTO vars (name, blobval) VALUES ('genesis_hash', ?);"
msgstr ""

#: wallet/wallet.c:3285
msgid "SELECT txid, outnum FROM utxoset WHERE spendheight < ?"
msgstr ""

#: wallet/wallet.c:3297
msgid "DELETE FROM utxoset WHERE spendheight < ?"
msgstr ""

#: wallet/wallet.c:3305 wallet/wallet.c:3419
msgid "INSERT INTO blocks (height, hash, prev_hash) VALUES (?, ?, ?);"
msgstr ""

#: wallet/wallet.c:3324
msgid "DELETE FROM blocks WHERE hash = ?"
msgstr ""

#: wallet/wallet.c:3330
msgid "SELECT * FROM blocks WHERE height >= ?;"
msgstr ""

#: wallet/wallet.c:3339
msgid "DELETE FROM blocks WHERE height > ?"
msgstr ""

#: wallet/wallet.c:3351
msgid "UPDATE outputs SET spend_height = ?,  status = ? WHERE prev_out_tx = ? AND prev_out_index = ?"
msgstr ""

#: wallet/wallet.c:3369
msgid "UPDATE utxoset SET spendheight = ? WHERE txid = ? AND outnum = ?"
msgstr ""

#: wallet/wallet.c:3392 wallet/wallet.c:3430
msgid "INSERT INTO utxoset ( txid, outnum, blockheight, spendheight, txindex, scriptpubkey, satoshis) VALUES(?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:3456
msgid "SELECT height FROM blocks WHERE height = ?"
msgstr ""

#: wallet/wallet.c:3469
msgid "SELECT txid, spendheight, scriptpubkey, satoshis FROM utxoset WHERE blockheight = ? AND txindex = ? AND outnum = ? AND spendheight IS NULL"
msgstr ""

#: wallet/wallet.c:3511
msgid "SELECT blockheight, txindex, outnum FROM utxoset WHERE spendheight = ?"
msgstr ""

#: wallet/wallet.c:3542 wallet/wallet.c:3702
msgid "SELECT blockheight FROM transactions WHERE id=?"
msgstr ""

#: wallet/wallet.c:3552
msgid "INSERT INTO transactions (  id, blockheight, txindex, rawtx) VALUES (?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:3573
msgid "UPDATE transactions SET blockheight = ?, txindex = ? WHERE id = ?"
msgstr ""

#: wallet/wallet.c:3590
msgid "INSERT INTO transaction_annotations (txid, idx, location, type, channel) VALUES (?, ?, ?, ?, ?) ON CONFLICT(txid,idx) DO NOTHING;"
msgstr ""

#: wallet/wallet.c:3622
msgid "SELECT type, channel_id FROM transactions WHERE id=?"
msgstr ""

#: wallet/wallet.c:3638
msgid "UPDATE transactions SET type = ?, channel_id = ? WHERE id = ?"
msgstr ""

#: wallet/wallet.c:3657
msgid "SELECT type FROM transactions WHERE id=?"
msgstr ""

#: wallet/wallet.c:3680
msgid "SELECT rawtx FROM transactions WHERE id=?"
msgstr ""

#: wallet/wallet.c:3726
msgid "SELECT blockheight, txindex FROM transactions WHERE id=?"
msgstr ""

#: wallet/wallet.c:3754
msgid "SELECT id FROM transactions WHERE blockheight=?"
msgstr ""

#: wallet/wallet.c:3773
msgid "INSERT INTO channeltxs (  channel_id, type, transaction_id, input_num, blockheight) VALUES (?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:3797
msgid "SELECT DISTINCT(channel_id) FROM channeltxs WHERE type = ?;"
msgstr ""

#: wallet/wallet.c:3818
msgid "SELECT  c.type, c.blockheight, t.rawtx, c.input_num, c.blockheight - t.blockheight + 1 AS depth, t.id as txid FROM channeltxs c JOIN transactions t ON t.id = c.transaction_id WHERE c.channel_id = ? ORDER BY c.id ASC;"
msgstr ""

#: wallet/wallet.c:3863
msgid "UPDATE forwarded_payments SET  in_msatoshi=?, out_msatoshi=?, state=?, resolved_time=?, failcode=? WHERE in_htlc_id=?"
msgstr ""

#: wallet/wallet.c:3921
msgid "INSERT INTO forwarded_payments (  in_htlc_id, out_htlc_id, in_channel_scid, out_channel_scid, in_msatoshi, out_msatoshi, state, received_time, resolved_time, failcode) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:3980
msgid "SELECT CAST(COALESCE(SUM(in_msatoshi - out_msatoshi), 0) AS BIGINT)FROM forwarded_payments WHERE state = ?;"
msgstr ""

#: wallet/wallet.c:4029
msgid "SELECT  f.state, in_msatoshi, out_msatoshi, hin.payment_hash as payment_hash, in_channel_scid, out_channel_scid, f.received_time, f.resolved_time, f.failcode FROM forwarded_payments f LEFT JOIN channel_htlcs hin ON (f.in_htlc_id = hin.id) WHERE (1 = ? OR f.state = ?) AND (1 = ? OR f.in_channel_scid = ?) AND (1 = ? OR f.out_channel_scid = ?)"
msgstr ""

#: wallet/wallet.c:4151
msgid "SELECT  t.id, t.rawtx, t.blockheight, t.txindex, t.type as txtype, c2.short_channel_id as txchan, a.location, a.idx as ann_idx, a.type as annotation_type, c.short_channel_id FROM  transactions t LEFT JOIN  transaction_annotations a ON (a.txid = t.id) LEFT JOIN  channels c ON (a.channel = c.id) LEFT JOIN  channels c2 ON (t.channel_id = c2.id) ORDER BY t.blockheight, t.txindex ASC"
msgstr ""

#: wallet/wallet.c:4245
msgid "INSERT INTO penalty_bases (  channel_id, commitnum, txid, outnum, amount) VALUES (?, ?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:4270
msgid "SELECT commitnum, txid, outnum, amount FROM penalty_bases WHERE channel_id = ?"
msgstr ""

#: wallet/wallet.c:4294
msgid "DELETE FROM penalty_bases WHERE channel_id = ? AND commitnum = ?"
msgstr ""

#: wallet/wallet.c:4312
msgid "SELECT 1  FROM offers WHERE offer_id = ?;"
msgstr ""

#: wallet/wallet.c:4325
msgid "INSERT INTO offers (  offer_id, bolt12, label, status) VALUES (?, ?, ?, ?);"
msgstr ""

#: wallet/wallet.c:4352
msgid "SELECT bolt12, label, status  FROM offers WHERE offer_id = ?;"
msgstr ""

#: wallet/wallet.c:4380
msgid "SELECT offer_id FROM offers;"
msgstr ""

#: wallet/wallet.c:4406
msgid "UPDATE offers SET status=? WHERE offer_id = ?;"
msgstr ""

#: wallet/wallet.c:4417
msgid "UPDATE invoices SET state=? WHERE state=? AND local_offer_id = ?;"
msgstr ""

#: wallet/wallet.c:4445
msgid "SELECT status  FROM offers WHERE offer_id = ?;"
msgstr ""

#: wallet/test/run-db.c:126
msgid "SELECT name FROM sqlite_master WHERE type='table';"
msgstr ""

#: wallet/test/run-db.c:131
msgid "not a valid SQL statement"
msgstr ""

#: wallet/test/run-wallet.c:1445
msgid "SELECT COUNT(1) FROM channel_funding_inflights WHERE channel_id = ?;"
msgstr ""

#: wallet/test/run-wallet.c:1643
msgid "INSERT INTO channels (id) VALUES (1);"
msgstr ""
#  SHA256STAMP:be8710aae042274c3b689ec333ee2d50d4116c3ea4d6b97338eaf88050137967
